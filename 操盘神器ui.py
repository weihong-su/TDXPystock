# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\pythonTtest\TDXPystock\操盘神器ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1937, 1017)
        font = QtGui.QFont()
        font.setBold(False)
        MainWindow.setFont(font)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color:qlineargradient(x1: 0, y1: 0, x2: 0.7, y2:0.7,stop: 0.5 #991e00, stop: 1 #660033);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("color: rgb(255, 255, 255);\n"
"border-color: rgb(16, 8, 255);\n"
"background-color:qlineargradient(x1: 0, y1: 0, x2: 0.7, y2:0.7,stop: 0.5 #991e00, stop: 1 #660033);\n"
"selection-color:rgb(255, 0, 0);\n"
"selection-background-color: rgb(0, 0, 62);")
        self.centralwidget.setObjectName("centralwidget")
        self.label_informations = QtWidgets.QLabel(self.centralwidget)
        self.label_informations.setGeometry(QtCore.QRect(0, 0, 1511, 31))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        self.label_informations.setFont(font)
        self.label_informations.setStyleSheet("background-color: rgb(0, 0, 63);\n"
"color: rgb(255, 0, 0);\n"
"font: 11pt \"Agency FB\";")
        self.label_informations.setText("")
        self.label_informations.setObjectName("label_informations")
        self.tabWidget_left = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_left.setGeometry(QtCore.QRect(0, 30, 1511, 591))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        self.tabWidget_left.setFont(font)
        self.tabWidget_left.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tabWidget_left.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tabWidget_left.setAutoFillBackground(False)
        self.tabWidget_left.setStyleSheet("QTabWidget::pane{\n"
"    border:none;    \n"
"    background-color: rgb(147, 0, 0);\n"
"}")
        self.tabWidget_left.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget_left.setObjectName("tabWidget_left")
        self.tab_monitorcenter = QtWidgets.QWidget()
        self.tab_monitorcenter.setObjectName("tab_monitorcenter")
        self.label_drogstock = QtWidgets.QLabel(self.tab_monitorcenter)
        self.label_drogstock.setGeometry(QtCore.QRect(0, 310, 491, 21))
        self.label_drogstock.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_drogstock.setAutoFillBackground(False)
        self.label_drogstock.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_drogstock.setObjectName("label_drogstock")
        self.textEdit_drogMoniter = QtWidgets.QTextEdit(self.tab_monitorcenter)
        self.textEdit_drogMoniter.setGeometry(QtCore.QRect(0, 330, 491, 231))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(11)
        self.textEdit_drogMoniter.setFont(font)
        self.textEdit_drogMoniter.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.textEdit_drogMoniter.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.textEdit_drogMoniter.setObjectName("textEdit_drogMoniter")
        self.label_superAmount = QtWidgets.QLabel(self.tab_monitorcenter)
        self.label_superAmount.setGeometry(QtCore.QRect(-10, 0, 501, 16))
        self.label_superAmount.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_superAmount.setAutoFillBackground(False)
        self.label_superAmount.setAlignment(QtCore.Qt.AlignCenter)
        self.label_superAmount.setObjectName("label_superAmount")
        self.label_zhangting = QtWidgets.QLabel(self.tab_monitorcenter)
        self.label_zhangting.setGeometry(QtCore.QRect(0, 550, 491, 16))
        self.label_zhangting.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_zhangting.setAutoFillBackground(False)
        self.label_zhangting.setAlignment(QtCore.Qt.AlignCenter)
        self.label_zhangting.setObjectName("label_zhangting")
        self.tableView_bankMonitor = QtWidgets.QTableView(self.tab_monitorcenter)
        self.tableView_bankMonitor.setGeometry(QtCore.QRect(490, 0, 1021, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_bankMonitor.setFont(font)
        self.tableView_bankMonitor.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_bankMonitor.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_bankMonitor.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_bankMonitor.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_bankMonitor.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_bankMonitor.setShowGrid(True)
        self.tableView_bankMonitor.setSortingEnabled(True)
        self.tableView_bankMonitor.setObjectName("tableView_bankMonitor")
        self.tableView_bankMonitor.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_bankMonitor.verticalHeader().setDefaultSectionSize(20)
        self.tableView_bankMonitor.verticalHeader().setMinimumSectionSize(20)
        self.tableView_superAmount = QtWidgets.QTableView(self.tab_monitorcenter)
        self.tableView_superAmount.setGeometry(QtCore.QRect(0, 10, 491, 301))
        self.tableView_superAmount.setMaximumSize(QtCore.QSize(491, 311))
        self.tableView_superAmount.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_superAmount.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_superAmount.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_superAmount.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"     selection-color: rgb(255, 0, 0);                             /*选中区域的文字颜色*/\n"
"    selection-background-color:rgb(16, 0, 25);        /*选中区域的背景色*/\n"
"} ")
        self.tableView_superAmount.setLineWidth(0)
        self.tableView_superAmount.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_superAmount.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_superAmount.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.tableView_superAmount.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.tableView_superAmount.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_superAmount.setShowGrid(False)
        self.tableView_superAmount.setSortingEnabled(True)
        self.tableView_superAmount.setObjectName("tableView_superAmount")
        self.tableView_superAmount.horizontalHeader().setCascadingSectionResizes(True)
        self.tableView_superAmount.horizontalHeader().setDefaultSectionSize(80)
        self.tableView_superAmount.horizontalHeader().setMinimumSectionSize(20)
        self.tableView_superAmount.horizontalHeader().setStretchLastSection(True)
        self.tableView_superAmount.verticalHeader().setCascadingSectionResizes(True)
        self.tableView_superAmount.verticalHeader().setMinimumSectionSize(25)
        self.tableView_superAmount.verticalHeader().setSortIndicatorShown(True)
        self.tableView_superAmount.verticalHeader().setStretchLastSection(False)
        self.textEdit_drogMoniter.raise_()
        self.label_drogstock.raise_()
        self.label_zhangting.raise_()
        self.tableView_bankMonitor.raise_()
        self.tableView_superAmount.raise_()
        self.label_superAmount.raise_()
        self.tabWidget_left.addTab(self.tab_monitorcenter, "")
        self.tab_bankcenter = QtWidgets.QWidget()
        self.tab_bankcenter.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(162, 0, 0);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(162, 0, 0);;\n"
"     selection-color: rgb(255, 0, 0);                             /*选中区域的文字颜色*/\n"
"    selection-background-color:rgb(16, 0, 25);        /*选中区域的背景色*/\n"
"}\n"
"")
        self.tab_bankcenter.setObjectName("tab_bankcenter")
        self.bankstockquote = QtWidgets.QTableView(self.tab_bankcenter)
        self.bankstockquote.setGeometry(QtCore.QRect(650, 20, 861, 311))
        self.bankstockquote.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.bankstockquote.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.bankstockquote.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.bankstockquote.setSortingEnabled(True)
        self.bankstockquote.setObjectName("bankstockquote")
        self.banktabview = QtWidgets.QTableView(self.tab_bankcenter)
        self.banktabview.setGeometry(QtCore.QRect(0, 20, 651, 311))
        self.banktabview.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.banktabview.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.banktabview.setSortingEnabled(True)
        self.banktabview.setObjectName("banktabview")
        self.comboBox_bankgainianflash = QtWidgets.QComboBox(self.tab_bankcenter)
        self.comboBox_bankgainianflash.setGeometry(QtCore.QRect(640, 0, 71, 22))
        font = QtGui.QFont()
        font.setFamily("等线")
        font.setPointSize(11)
        font.setBold(True)
        self.comboBox_bankgainianflash.setFont(font)
        self.comboBox_bankgainianflash.setStyleSheet("color: rgb(255, 255, 255);")
        self.comboBox_bankgainianflash.setMaxCount(3600)
        self.comboBox_bankgainianflash.setObjectName("comboBox_bankgainianflash")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.comboBox_bankgainianflash.addItem("")
        self.label_flashtimesset = QtWidgets.QLabel(self.tab_bankcenter)
        self.label_flashtimesset.setGeometry(QtCore.QRect(470, 0, 171, 20))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        self.label_flashtimesset.setFont(font)
        self.label_flashtimesset.setStyleSheet("color: rgb(255, 255, 0);\n"
"font: 75 10pt \"微软雅黑\";")
        self.label_flashtimesset.setAlignment(QtCore.Qt.AlignCenter)
        self.label_flashtimesset.setObjectName("label_flashtimesset")
        self.label_ganianbank = QtWidgets.QLabel(self.tab_bankcenter)
        self.label_ganianbank.setGeometry(QtCore.QRect(140, 320, 171, 20))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        font.setBold(True)
        self.label_ganianbank.setFont(font)
        self.label_ganianbank.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_ganianbank.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ganianbank.setObjectName("label_ganianbank")
        self.bankstock_award = QtWidgets.QTableView(self.tab_bankcenter)
        self.bankstock_award.setGeometry(QtCore.QRect(650, 320, 861, 251))
        self.bankstock_award.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.bankstock_award.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.bankstock_award.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.bankstock_award.setSortingEnabled(True)
        self.bankstock_award.setObjectName("bankstock_award")
        self.label_stockamound = QtWidgets.QLabel(self.tab_bankcenter)
        self.label_stockamound.setGeometry(QtCore.QRect(1000, 320, 201, 16))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        font.setBold(True)
        self.label_stockamound.setFont(font)
        self.label_stockamound.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_stockamound.setAlignment(QtCore.Qt.AlignCenter)
        self.label_stockamound.setObjectName("label_stockamound")
        self.ganniantabview = QtWidgets.QTableView(self.tab_bankcenter)
        self.ganniantabview.setGeometry(QtCore.QRect(0, 320, 651, 251))
        self.ganniantabview.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.ganniantabview.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.ganniantabview.setSortingEnabled(True)
        self.ganniantabview.setObjectName("ganniantabview")
        self.label_hybank = QtWidgets.QLabel(self.tab_bankcenter)
        self.label_hybank.setGeometry(QtCore.QRect(170, 0, 161, 20))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        font.setBold(True)
        self.label_hybank.setFont(font)
        self.label_hybank.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_hybank.setAlignment(QtCore.Qt.AlignCenter)
        self.label_hybank.setObjectName("label_hybank")
        self.label_stockquotes = QtWidgets.QLabel(self.tab_bankcenter)
        self.label_stockquotes.setGeometry(QtCore.QRect(980, 0, 211, 20))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        font.setBold(True)
        self.label_stockquotes.setFont(font)
        self.label_stockquotes.setStyleSheet("color: rgb(255, 255, 0);")
        self.label_stockquotes.setAlignment(QtCore.Qt.AlignCenter)
        self.label_stockquotes.setObjectName("label_stockquotes")
        self.bankstockquote.raise_()
        self.banktabview.raise_()
        self.comboBox_bankgainianflash.raise_()
        self.label_flashtimesset.raise_()
        self.bankstock_award.raise_()
        self.label_stockamound.raise_()
        self.ganniantabview.raise_()
        self.label_hybank.raise_()
        self.label_stockquotes.raise_()
        self.label_ganianbank.raise_()
        self.tabWidget_left.addTab(self.tab_bankcenter, "")
        self.tab_point = QtWidgets.QWidget()
        self.tab_point.setObjectName("tab_point")
        self.tableView_ponitdata = QtWidgets.QTableView(self.tab_point)
        self.tableView_ponitdata.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_ponitdata.setFont(font)
        self.tableView_ponitdata.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_ponitdata.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_ponitdata.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_ponitdata.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_ponitdata.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_ponitdata.setShowGrid(True)
        self.tableView_ponitdata.setSortingEnabled(True)
        self.tableView_ponitdata.setObjectName("tableView_ponitdata")
        self.tableView_ponitdata.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_ponitdata.verticalHeader().setDefaultSectionSize(25)
        self.tableView_ponitdata.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_point, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tableView_globalpoint = QtWidgets.QTableView(self.tab_2)
        self.tableView_globalpoint.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_globalpoint.setFont(font)
        self.tableView_globalpoint.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_globalpoint.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_globalpoint.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_globalpoint.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_globalpoint.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_globalpoint.setShowGrid(True)
        self.tableView_globalpoint.setSortingEnabled(True)
        self.tableView_globalpoint.setObjectName("tableView_globalpoint")
        self.tableView_globalpoint.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_globalpoint.verticalHeader().setDefaultSectionSize(25)
        self.tableView_globalpoint.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tableView_ETF = QtWidgets.QTableView(self.tab_3)
        self.tableView_ETF.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_ETF.setFont(font)
        self.tableView_ETF.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_ETF.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_ETF.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_ETF.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_ETF.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_ETF.setShowGrid(True)
        self.tableView_ETF.setSortingEnabled(True)
        self.tableView_ETF.setObjectName("tableView_ETF")
        self.tableView_ETF.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_ETF.verticalHeader().setDefaultSectionSize(25)
        self.tableView_ETF.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_3, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tableView_kzz = QtWidgets.QTableView(self.tab)
        self.tableView_kzz.setGeometry(QtCore.QRect(0, 0, 1491, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_kzz.setFont(font)
        self.tableView_kzz.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_kzz.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_kzz.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_kzz.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_kzz.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_kzz.setShowGrid(True)
        self.tableView_kzz.setSortingEnabled(True)
        self.tableView_kzz.setObjectName("tableView_kzz")
        self.tableView_kzz.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_kzz.verticalHeader().setDefaultSectionSize(25)
        self.tableView_kzz.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tableView_usa = QtWidgets.QTableView(self.tab_5)
        self.tableView_usa.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_usa.setFont(font)
        self.tableView_usa.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_usa.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_usa.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_usa.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_usa.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_usa.setShowGrid(True)
        self.tableView_usa.setSortingEnabled(True)
        self.tableView_usa.setObjectName("tableView_usa")
        self.tableView_usa.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_usa.verticalHeader().setDefaultSectionSize(25)
        self.tableView_usa.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_5, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tableView_allstock = QtWidgets.QTableView(self.tab_4)
        self.tableView_allstock.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_allstock.setFont(font)
        self.tableView_allstock.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_allstock.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_allstock.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tableView_allstock.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_allstock.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_allstock.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.tableView_allstock.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.tableView_allstock.setShowGrid(True)
        self.tableView_allstock.setSortingEnabled(True)
        self.tableView_allstock.setObjectName("tableView_allstock")
        self.tableView_allstock.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_allstock.verticalHeader().setDefaultSectionSize(25)
        self.tableView_allstock.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_4, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.tableView_leftmystock = QtWidgets.QTableView(self.tab_6)
        self.tableView_leftmystock.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_leftmystock.setFont(font)
        self.tableView_leftmystock.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_leftmystock.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_leftmystock.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_leftmystock.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_leftmystock.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_leftmystock.setShowGrid(True)
        self.tableView_leftmystock.setSortingEnabled(True)
        self.tableView_leftmystock.setObjectName("tableView_leftmystock")
        self.tableView_leftmystock.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_leftmystock.verticalHeader().setDefaultSectionSize(25)
        self.tableView_leftmystock.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_6, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.tableView_cyb = QtWidgets.QTableView(self.tab_7)
        self.tableView_cyb.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_cyb.setFont(font)
        self.tableView_cyb.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_cyb.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_cyb.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_cyb.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_cyb.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_cyb.setShowGrid(True)
        self.tableView_cyb.setSortingEnabled(True)
        self.tableView_cyb.setObjectName("tableView_cyb")
        self.tableView_cyb.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_cyb.verticalHeader().setDefaultSectionSize(25)
        self.tableView_cyb.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_7, "")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.tableView_zxb = QtWidgets.QTableView(self.tab_8)
        self.tableView_zxb.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_zxb.setFont(font)
        self.tableView_zxb.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_zxb.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_zxb.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_zxb.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_zxb.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_zxb.setShowGrid(True)
        self.tableView_zxb.setSortingEnabled(True)
        self.tableView_zxb.setObjectName("tableView_zxb")
        self.tableView_zxb.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_zxb.verticalHeader().setDefaultSectionSize(25)
        self.tableView_zxb.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_8, "")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.tableView_kcb = QtWidgets.QTableView(self.tab_9)
        self.tableView_kcb.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_kcb.setFont(font)
        self.tableView_kcb.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_kcb.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_kcb.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_kcb.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_kcb.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_kcb.setShowGrid(True)
        self.tableView_kcb.setSortingEnabled(True)
        self.tableView_kcb.setObjectName("tableView_kcb")
        self.tableView_kcb.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_kcb.verticalHeader().setDefaultSectionSize(25)
        self.tableView_kcb.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_9, "")
        self.tab_10 = QtWidgets.QWidget()
        self.tab_10.setObjectName("tab_10")
        self.tableView_jjs = QtWidgets.QTableView(self.tab_10)
        self.tableView_jjs.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_jjs.setFont(font)
        self.tableView_jjs.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_jjs.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_jjs.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_jjs.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_jjs.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_jjs.setShowGrid(True)
        self.tableView_jjs.setSortingEnabled(True)
        self.tableView_jjs.setObjectName("tableView_jjs")
        self.tableView_jjs.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_jjs.verticalHeader().setDefaultSectionSize(25)
        self.tableView_jjs.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_10, "")
        self.tab_11 = QtWidgets.QWidget()
        self.tab_11.setObjectName("tab_11")
        self.tableView_zgg = QtWidgets.QTableView(self.tab_11)
        self.tableView_zgg.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_zgg.setFont(font)
        self.tableView_zgg.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_zgg.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_zgg.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_zgg.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_zgg.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_zgg.setShowGrid(True)
        self.tableView_zgg.setSortingEnabled(True)
        self.tableView_zgg.setObjectName("tableView_zgg")
        self.tableView_zgg.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_zgg.verticalHeader().setDefaultSectionSize(25)
        self.tableView_zgg.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_11, "")
        self.tab_12 = QtWidgets.QWidget()
        self.tab_12.setObjectName("tab_12")
        self.tableView_hk = QtWidgets.QTableView(self.tab_12)
        self.tableView_hk.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_hk.setFont(font)
        self.tableView_hk.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_hk.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_hk.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_hk.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_hk.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_hk.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableView_hk.setShowGrid(True)
        self.tableView_hk.setSortingEnabled(True)
        self.tableView_hk.setObjectName("tableView_hk")
        self.tableView_hk.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_hk.verticalHeader().setDefaultSectionSize(25)
        self.tableView_hk.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_12, "")
        self.tab_13 = QtWidgets.QWidget()
        self.tab_13.setObjectName("tab_13")
        self.tableView_qqzq = QtWidgets.QTableView(self.tab_13)
        self.tableView_qqzq.setGeometry(QtCore.QRect(0, 0, 1511, 571))
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(12)
        self.tableView_qqzq.setFont(font)
        self.tableView_qqzq.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_qqzq.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_qqzq.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_qqzq.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_qqzq.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_qqzq.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableView_qqzq.setShowGrid(True)
        self.tableView_qqzq.setSortingEnabled(True)
        self.tableView_qqzq.setObjectName("tableView_qqzq")
        self.tableView_qqzq.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_qqzq.verticalHeader().setDefaultSectionSize(25)
        self.tableView_qqzq.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_left.addTab(self.tab_13, "")
        self.tabWidget_rightcontent = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_rightcontent.setGeometry(QtCore.QRect(1510, 0, 425, 971))
        self.tabWidget_rightcontent.setMaximumSize(QtCore.QSize(425, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tabWidget_rightcontent.setFont(font)
        self.tabWidget_rightcontent.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tabWidget_rightcontent.setStyleSheet("QTabWidget::pane{\n"
"    border:none;\n"
"    background: rgb(0, 0, 21);\n"
"}")
        self.tabWidget_rightcontent.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget_rightcontent.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget_rightcontent.setMovable(True)
        self.tabWidget_rightcontent.setObjectName("tabWidget_rightcontent")
        self.MYSTOCK = QtWidgets.QWidget()
        self.MYSTOCK.setStyleSheet("color: rgb(255, 0, 0);\n"
"background-color: rgb(20, 0, 31);")
        self.MYSTOCK.setObjectName("MYSTOCK")
        self.tableView_mystock = QtWidgets.QTableView(self.MYSTOCK)
        self.tableView_mystock.setGeometry(QtCore.QRect(0, 40, 421, 881))
        self.tableView_mystock.setMaximumSize(QtCore.QSize(425, 16777215))
        self.tableView_mystock.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_mystock.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_mystock.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_mystock.setStyleSheet("QTableView {\n"
"    color: rgb(255, 0, 0)                                       /*表格内文字颜色*/\n"
"    gridline-color:  rgb(255, 0, 0);                              /*表格内框颜色*/\n"
"    background-color: rgb(35, 0, 53);               /*表格内背景色*/\n"
"    alternate-background-color: rgb(64, 64, 64);\n"
"    selection-color: white;                             /*选中区域的文字颜色*/\n"
"    selection-background-color:rgb(170, 170, 255);        /*选中区域的背景色*/\n"
"    border: 0px   \n"
"}\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} \n"
"QHeaderView#hHeader::section {\n"
"    background-color:rgb(0, 0, 74);\n"
"    color: rgb(255, 255, 255);\n"
"    padding-left: 1px;\n"
"    border: 1px solid #6c6c6c;\n"
"    height:25;\n"
"}\n"
"QHeaderView#vHeader::section {\n"
"    background-color:rgb(0, 0, 74);\n"
"    color: rgb(255, 255, 255)\n"
"    width:25;\n"
"}")
        self.tableView_mystock.setLineWidth(0)
        self.tableView_mystock.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_mystock.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.tableView_mystock.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_mystock.setShowGrid(False)
        self.tableView_mystock.setSortingEnabled(True)
        self.tableView_mystock.setObjectName("tableView_mystock")
        self.tableView_mystock.horizontalHeader().setDefaultSectionSize(80)
        self.tableView_mystock.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_mystock.verticalHeader().setMinimumSectionSize(25)
        self.pushButtonaddmysocks = QtWidgets.QPushButton(self.MYSTOCK)
        self.pushButtonaddmysocks.setGeometry(QtCore.QRect(10, 10, 61, 28))
        self.pushButtonaddmysocks.setStyleSheet("background-color: rgb(13, 0, 20);\n"
"font: 11pt \"新宋体\";\n"
"QPushButton\n"
"{\n"
"    background-color: rgb(134,183,200); //背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体颜色\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"    background-color: rgb(0,130,150); //伪状态经过时背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体为白色\n"
"}\n"
" \n"
"QPushButton:hover:pressed\n"
"{\n"
"    background-color:rgb(85,170,255); //伪状态，点击时的背景色\n"
"    border:2px solid #3C80B1; //\n"
"    border-radius:5px;\n"
"    color:white;\n"
"}")
        self.pushButtonaddmysocks.setObjectName("pushButtonaddmysocks")
        self.pushButtondelmystocks = QtWidgets.QPushButton(self.MYSTOCK)
        self.pushButtondelmystocks.setGeometry(QtCore.QRect(86, 10, 61, 28))
        self.pushButtondelmystocks.setStyleSheet("background-color: rgb(19, 0, 29);\n"
"font: 11pt \"新宋体\";\n"
"QPushButton\n"
"{\n"
"    background-color: rgb(134,183,200); //背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体颜色\n"
"}\n"
" \n"
"QPushButton:hover\n"
"{\n"
"    background-color: rgb(0,130,150); //伪状态经过时背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体为白色\n"
"}\n"
" \n"
"QPushButton:hover:pressed\n"
"{\n"
"    background-color:rgb(85,170,255); //伪状态，点击时的背景色\n"
"    border:2px solid #3C80B1; //\n"
"    border-radius:5px;\n"
"    color:white;\n"
"}")
        self.pushButtondelmystocks.setObjectName("pushButtondelmystocks")
        self.pushButtonflushquotestart = QtWidgets.QPushButton(self.MYSTOCK)
        self.pushButtonflushquotestart.setGeometry(QtCore.QRect(170, 10, 121, 28))
        self.pushButtonflushquotestart.setStyleSheet("background-color: rgb(19, 0, 29);\n"
"font: 11pt \"新宋体\";\n"
"QPushButton\n"
"{\n"
"    background-color: rgb(134,183,200); //背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体颜色\n"
"}\n"
" \n"
"QPushButton:hover\n"
"{\n"
"    background-color: rgb(0,130,150); //伪状态经过时背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体为白色\n"
"}\n"
" \n"
"QPushButton:hover:pressed\n"
"{\n"
"    background-color:rgb(85,170,255); //伪状态，点击时的背景色\n"
"    border:2px solid #3C80B1; //\n"
"    border-radius:5px;\n"
"    color:white;\n"
"}")
        self.pushButtonflushquotestart.setObjectName("pushButtonflushquotestart")
        self.pushButtonvoiceremainder = QtWidgets.QPushButton(self.MYSTOCK)
        self.pushButtonvoiceremainder.setGeometry(QtCore.QRect(320, 10, 79, 28))
        self.pushButtonvoiceremainder.setStyleSheet("background-color: rgb(19, 0, 29);\n"
"font: 11pt \"新宋体\";\n"
"QPushButton\n"
"{\n"
"    background-color: rgb(134,183,200); //背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体颜色\n"
"}\n"
" \n"
"QPushButton:hover\n"
"{\n"
"    background-color: rgb(0,130,150); //伪状态经过时背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体为白色\n"
"}\n"
" \n"
"QPushButton:hover:pressed\n"
"{\n"
"    background-color:rgb(85,170,255); //伪状态，点击时的背景色\n"
"    border:2px solid #3C80B1; //\n"
"    border-radius:5px;\n"
"    color:white;\n"
"}")
        self.pushButtonvoiceremainder.setObjectName("pushButtonvoiceremainder")
        self.tabWidget_rightcontent.addTab(self.MYSTOCK, "")
        self.clsnews = QtWidgets.QWidget()
        self.clsnews.setStyleSheet("color: rgb(255, 0, 0);\n"
"background-color: rgb(20, 0, 31);")
        self.clsnews.setObjectName("clsnews")
        self.textEdit_clxnewsView = QtWidgets.QTextEdit(self.clsnews)
        self.textEdit_clxnewsView.setGeometry(QtCore.QRect(0, 0, 425, 921))
        self.textEdit_clxnewsView.setMaximumSize(QtCore.QSize(425, 921))
        self.textEdit_clxnewsView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.textEdit_clxnewsView.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.textEdit_clxnewsView.setReadOnly(True)
        self.textEdit_clxnewsView.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit_clxnewsView.setObjectName("textEdit_clxnewsView")
        self.tabWidget_rightcontent.addTab(self.clsnews, "")
        self.tab_14 = QtWidgets.QWidget()
        self.tab_14.setObjectName("tab_14")
        self.tableView_bankstocktop2 = QtWidgets.QTableView(self.tab_14)
        self.tableView_bankstocktop2.setGeometry(QtCore.QRect(0, 0, 421, 931))
        self.tableView_bankstocktop2.setMaximumSize(QtCore.QSize(425, 16777215))
        self.tableView_bankstocktop2.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_bankstocktop2.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_bankstocktop2.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_bankstocktop2.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_bankstocktop2.setLineWidth(0)
        self.tableView_bankstocktop2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_bankstocktop2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.tableView_bankstocktop2.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_bankstocktop2.setShowGrid(False)
        self.tableView_bankstocktop2.setSortingEnabled(True)
        self.tableView_bankstocktop2.setObjectName("tableView_bankstocktop2")
        self.tableView_bankstocktop2.horizontalHeader().setDefaultSectionSize(80)
        self.tableView_bankstocktop2.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_bankstocktop2.verticalHeader().setMinimumSectionSize(25)
        self.tabWidget_rightcontent.addTab(self.tab_14, "")
        self.realfund = QtWidgets.QWidget()
        self.realfund.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.realfund.setObjectName("realfund")
        self.tableView_realfund = QtWidgets.QTableView(self.realfund)
        self.tableView_realfund.setGeometry(QtCore.QRect(0, 30, 421, 891))
        self.tableView_realfund.setMaximumSize(QtCore.QSize(425, 16777215))
        self.tableView_realfund.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_realfund.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_realfund.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_realfund.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"} ")
        self.tableView_realfund.setLineWidth(0)
        self.tableView_realfund.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_realfund.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.tableView_realfund.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_realfund.setShowGrid(False)
        self.tableView_realfund.setSortingEnabled(True)
        self.tableView_realfund.setObjectName("tableView_realfund")
        self.tableView_realfund.horizontalHeader().setDefaultSectionSize(80)
        self.tableView_realfund.horizontalHeader().setMinimumSectionSize(25)
        self.tableView_realfund.verticalHeader().setMinimumSectionSize(25)
        self.pushButton_flushfundsort = QtWidgets.QPushButton(self.realfund)
        self.pushButton_flushfundsort.setGeometry(QtCore.QRect(310, 0, 81, 28))
        self.pushButton_flushfundsort.setStyleSheet("background-color: rgb(19, 0, 29);\n"
"font: 11pt \"新宋体\";\n"
"QPushButton\n"
"{\n"
"    background-color: rgb(134,183,200); //背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体颜色\n"
"}\n"
" \n"
"QPushButton:hover\n"
"{\n"
"    background-color: rgb(0,130,150); //伪状态经过时背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体为白色\n"
"}\n"
" \n"
"QPushButton:hover:pressed\n"
"{\n"
"    background-color:rgb(85,170,255); //伪状态，点击时的背景色\n"
"    border:2px solid #3C80B1; //\n"
"    border-radius:5px;\n"
"    color:white;\n"
"}")
        self.pushButton_flushfundsort.setObjectName("pushButton_flushfundsort")
        self.lineEdit_realfundtime = QtWidgets.QLineEdit(self.realfund)
        self.lineEdit_realfundtime.setGeometry(QtCore.QRect(252, 0, 51, 31))
        self.lineEdit_realfundtime.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 0, 0);\n"
"font: 10pt \"新宋体\";")
        self.lineEdit_realfundtime.setObjectName("lineEdit_realfundtime")
        self.label_realfundflushtime = QtWidgets.QLabel(self.realfund)
        self.label_realfundflushtime.setGeometry(QtCore.QRect(130, 4, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(10)
        self.label_realfundflushtime.setFont(font)
        self.label_realfundflushtime.setObjectName("label_realfundflushtime")
        self.tabWidget_rightcontent.addTab(self.realfund, "")
        self.tdxdd = QtWidgets.QWidget()
        self.tdxdd.setStyleSheet("color: rgb(255, 0, 0);\n"
"background-color: rgb(20, 0, 31);")
        self.tdxdd.setObjectName("tdxdd")
        self.textEdit_tdxdadanView = QtWidgets.QTextEdit(self.tdxdd)
        self.textEdit_tdxdadanView.setGeometry(QtCore.QRect(0, 0, 425, 921))
        self.textEdit_tdxdadanView.setMaximumSize(QtCore.QSize(425, 921))
        self.textEdit_tdxdadanView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.textEdit_tdxdadanView.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.textEdit_tdxdadanView.setStyleSheet("color: rgb(255, 255, 0);")
        self.textEdit_tdxdadanView.setReadOnly(True)
        self.textEdit_tdxdadanView.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textEdit_tdxdadanView.setObjectName("textEdit_tdxdadanView")
        self.tabWidget_rightcontent.addTab(self.tdxdd, "")
        self.stockcheckhealth = QtWidgets.QWidget()
        self.stockcheckhealth.setStyleSheet("color: rgb(255, 0, 0);\n"
"background-color: rgb(20, 0, 31);")
        self.stockcheckhealth.setObjectName("stockcheckhealth")
        self.lineEdit_inputstock = QtWidgets.QLineEdit(self.stockcheckhealth)
        self.lineEdit_inputstock.setGeometry(QtCore.QRect(20, 20, 161, 31))
        self.lineEdit_inputstock.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 0, 0);\n"
"font: 10pt \"新宋体\";")
        self.lineEdit_inputstock.setObjectName("lineEdit_inputstock")
        self.textEdit_fengxianlist = QtWidgets.QTextEdit(self.stockcheckhealth)
        self.textEdit_fengxianlist.setGeometry(QtCore.QRect(0, 60, 425, 871))
        self.textEdit_fengxianlist.setMaximumSize(QtCore.QSize(425, 16777215))
        self.textEdit_fengxianlist.setStyleSheet("color: rgb(255, 0, 0);\n"
"font: 10pt \"新宋体\";")
        self.textEdit_fengxianlist.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.textEdit_fengxianlist.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.textEdit_fengxianlist.setObjectName("textEdit_fengxianlist")
        self.pushButton_checkhealth = QtWidgets.QPushButton(self.stockcheckhealth)
        self.pushButton_checkhealth.setGeometry(QtCore.QRect(240, 20, 111, 31))
        self.pushButton_checkhealth.setStyleSheet("background-color: rgb(19, 0, 29);\n"
"font: 11pt \"新宋体\";\n"
"QPushButton\n"
"{\n"
"    background-color: rgb(134,183,200); //背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体颜色\n"
"}\n"
" \n"
"QPushButton:hover\n"
"{\n"
"    background-color: rgb(0,130,150); //伪状态经过时背景色\n"
"    border:2px solid #5F92B2; //边界和边界颜色\n"
"    border-radius:5px; //边界圆滑\n"
"    color:white; //字体为白色\n"
"}\n"
" \n"
"QPushButton:hover:pressed\n"
"{\n"
"    background-color:rgb(85,170,255); //伪状态，点击时的背景色\n"
"    border:2px solid #3C80B1; //\n"
"    border-radius:5px;\n"
"    color:white;\n"
"}")
        self.pushButton_checkhealth.setObjectName("pushButton_checkhealth")
        self.tabWidget_rightcontent.addTab(self.stockcheckhealth, "")
        self.tableView_zhangtingdata = QtWidgets.QTableView(self.centralwidget)
        self.tableView_zhangtingdata.setGeometry(QtCore.QRect(0, 620, 1511, 331))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        self.tableView_zhangtingdata.setFont(font)
        self.tableView_zhangtingdata.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableView_zhangtingdata.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.tableView_zhangtingdata.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tableView_zhangtingdata.setStyleSheet("color: rgb(255, 255, 0);\n"
"background-color: rgb(16, 0, 25);\n"
"tableView QTableCornerButton::section {\n"
"    border: 1px solid gray;\n"
"    background-color: rgb(16, 0, 25);\n"
"     selection-color: rgb(255, 0, 0);                             /*选中区域的文字颜色*/\n"
"    selection-background-color:rgb(16, 0, 25);        /*选中区域的背景色*/\n"
"} ")
        self.tableView_zhangtingdata.setLineWidth(0)
        self.tableView_zhangtingdata.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_zhangtingdata.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableView_zhangtingdata.setDragEnabled(True)
        self.tableView_zhangtingdata.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.tableView_zhangtingdata.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.tableView_zhangtingdata.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableView_zhangtingdata.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableView_zhangtingdata.setShowGrid(False)
        self.tableView_zhangtingdata.setSortingEnabled(True)
        self.tableView_zhangtingdata.setObjectName("tableView_zhangtingdata")
        self.tableView_zhangtingdata.horizontalHeader().setCascadingSectionResizes(True)
        self.tableView_zhangtingdata.horizontalHeader().setDefaultSectionSize(60)
        self.tableView_zhangtingdata.horizontalHeader().setMinimumSectionSize(20)
        self.tableView_zhangtingdata.horizontalHeader().setStretchLastSection(True)
        self.tableView_zhangtingdata.verticalHeader().setCascadingSectionResizes(True)
        self.tableView_zhangtingdata.verticalHeader().setMinimumSectionSize(25)
        self.tableView_zhangtingdata.verticalHeader().setSortIndicatorShown(True)
        self.tableView_zhangtingdata.raise_()
        self.label_informations.raise_()
        self.tabWidget_left.raise_()
        self.tabWidget_rightcontent.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1937, 26))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.menubar.setFont(font)
        self.menubar.setStyleSheet("color: rgb(255, 255, 255);\n"
"border-color: rgb(16, 8, 255);\n"
"background-color:qlineargradient(x1: 0, y1: 0, x2: 0.7, y2:0.7,stop: 0.5 #991e00, stop: 1 #660033);\n"
"selection-color:rgb(40,150,200);")
        self.menubar.setObjectName("menubar")
        self.NorthAmtmenu = QtWidgets.QMenu(self.menubar)
        self.NorthAmtmenu.setObjectName("NorthAmtmenu")
        self.SupperAmtmenu = QtWidgets.QMenu(self.menubar)
        self.SupperAmtmenu.setObjectName("SupperAmtmenu")
        self.levelset = QtWidgets.QMenu(self.SupperAmtmenu)
        self.levelset.setObjectName("levelset")
        self.menu_dadanDataOutput = QtWidgets.QMenu(self.SupperAmtmenu)
        self.menu_dadanDataOutput.setObjectName("menu_dadanDataOutput")
        self.menu_dadananaly = QtWidgets.QMenu(self.SupperAmtmenu)
        self.menu_dadananaly.setObjectName("menu_dadananaly")
        self.bankmenu = QtWidgets.QMenu(self.menubar)
        self.bankmenu.setObjectName("bankmenu")
        self.menu_intervalset = QtWidgets.QMenu(self.bankmenu)
        self.menu_intervalset.setObjectName("menu_intervalset")
        self.topStockgetmenu = QtWidgets.QMenu(self.menubar)
        self.topStockgetmenu.setObjectName("topStockgetmenu")
        self.menu_stock_select = QtWidgets.QMenu(self.menubar)
        self.menu_stock_select.setObjectName("menu_stock_select")
        self.menuMaxstockmonitor = QtWidgets.QMenu(self.menubar)
        self.menuMaxstockmonitor.setObjectName("menuMaxstockmonitor")
        self.menuzhangting = QtWidgets.QMenu(self.menubar)
        self.menuzhangting.setObjectName("menuzhangting")
        self.menu_MarketOoenAndclose = QtWidgets.QMenu(self.menubar)
        self.menu_MarketOoenAndclose.setObjectName("menu_MarketOoenAndclose")
        self.menu_myblank = QtWidgets.QMenu(self.menubar)
        self.menu_myblank.setObjectName("menu_myblank")
        self.menu_TDXdatascenter = QtWidgets.QMenu(self.menubar)
        self.menu_TDXdatascenter.setObjectName("menu_TDXdatascenter")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_zixun = QtWidgets.QMenu(self.menubar)
        self.menu_zixun.setObjectName("menu_zixun")
        self.menu_jingjia = QtWidgets.QMenu(self.menubar)
        self.menu_jingjia.setObjectName("menu_jingjia")
        self.southAmtmenu = QtWidgets.QMenu(self.menubar)
        self.southAmtmenu.setObjectName("southAmtmenu")
        self.menuAI = QtWidgets.QMenu(self.menubar)
        self.menuAI.setObjectName("menuAI")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setFamily("新宋体")
        font.setPointSize(11)
        self.statusbar.setFont(font)
        self.statusbar.setStyleSheet("color: rgb(255, 255, 255);\n"
"border-color: rgb(16, 8, 255);\n"
"background-color:qlineargradient(x1: 0, y1: 0, x2: 0.7, y2:0.7,stop: 0.5 #991e00, stop: 1 #660033);\n"
"selection-color:rgb(40,150,200);")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSuperRealQuote = QtWidgets.QAction(MainWindow)
        self.actionSuperRealQuote.setObjectName("actionSuperRealQuote")
        self.actionvol10000 = QtWidgets.QAction(MainWindow)
        self.actionvol10000.setObjectName("actionvol10000")
        self.actionvol5000 = QtWidgets.QAction(MainWindow)
        self.actionvol5000.setObjectName("actionvol5000")
        self.actionvol1000 = QtWidgets.QAction(MainWindow)
        self.actionvol1000.setObjectName("actionvol1000")
        self.actionMonitorlistAddstock = QtWidgets.QAction(MainWindow)
        self.actionMonitorlistAddstock.setObjectName("actionMonitorlistAddstock")
        self.actiondadanoutTotxt = QtWidgets.QAction(MainWindow)
        self.actiondadanoutTotxt.setObjectName("actiondadanoutTotxt")
        self.actiondadanoutTocsv = QtWidgets.QAction(MainWindow)
        self.actiondadanoutTocsv.setObjectName("actiondadanoutTocsv")
        self.actiondadanoutTohtml = QtWidgets.QAction(MainWindow)
        self.actiondadanoutTohtml.setObjectName("actiondadanoutTohtml")
        self.actionclear = QtWidgets.QAction(MainWindow)
        self.actionclear.setObjectName("actionclear")
        self.actionflush = QtWidgets.QAction(MainWindow)
        self.actionflush.setObjectName("actionflush")
        self.actionflush10s = QtWidgets.QAction(MainWindow)
        self.actionflush10s.setObjectName("actionflush10s")
        self.actionflush20s = QtWidgets.QAction(MainWindow)
        self.actionflush20s.setObjectName("actionflush20s")
        self.actionflush30s = QtWidgets.QAction(MainWindow)
        self.actionflush30s.setObjectName("actionflush30s")
        self.actionflush60s = QtWidgets.QAction(MainWindow)
        self.actionflush60s.setObjectName("actionflush60s")
        self.actionflush5m = QtWidgets.QAction(MainWindow)
        self.actionflush5m.setObjectName("actionflush5m")
        self.actionflush10m = QtWidgets.QAction(MainWindow)
        self.actionflush10m.setObjectName("actionflush10m")
        self.actionAlist = QtWidgets.QAction(MainWindow)
        self.actionAlist.setObjectName("actionAlist")
        self.actionHKlist = QtWidgets.QAction(MainWindow)
        self.actionHKlist.setObjectName("actionHKlist")
        self.actionUSAlist = QtWidgets.QAction(MainWindow)
        self.actionUSAlist.setObjectName("actionUSAlist")
        self.actionStocklistOutput = QtWidgets.QAction(MainWindow)
        self.actionStocklistOutput.setObjectName("actionStocklistOutput")
        self.actionSelectStockByAm = QtWidgets.QAction(MainWindow)
        self.actionSelectStockByAm.setObjectName("actionSelectStockByAm")
        self.actionSelectStockByPm = QtWidgets.QAction(MainWindow)
        self.actionSelectStockByPm.setObjectName("actionSelectStockByPm")
        self.actionSelectlowlinestock = QtWidgets.QAction(MainWindow)
        self.actionSelectlowlinestock.setObjectName("actionSelectlowlinestock")
        self.actionsouthstockF10 = QtWidgets.QAction(MainWindow)
        self.actionsouthstockF10.setObjectName("actionsouthstockF10")
        self.actionnorthDatainserttoDB = QtWidgets.QAction(MainWindow)
        self.actionnorthDatainserttoDB.setObjectName("actionnorthDatainserttoDB")
        self.actionnorthTop20Select = QtWidgets.QAction(MainWindow)
        self.actionnorthTop20Select.setObjectName("actionnorthTop20Select")
        self.actionnorthbuyup = QtWidgets.QAction(MainWindow)
        self.actionnorthbuyup.setObjectName("actionnorthbuyup")
        self.actionnorthDataforone = QtWidgets.QAction(MainWindow)
        self.actionnorthDataforone.setWhatsThis("")
        self.actionnorthDataforone.setObjectName("actionnorthDataforone")
        self.actionnorthstockF10 = QtWidgets.QAction(MainWindow)
        self.actionnorthstockF10.setObjectName("actionnorthstockF10")
        self.actionsuportjust30dayNorthData = QtWidgets.QAction(MainWindow)
        self.actionsuportjust30dayNorthData.setObjectName("actionsuportjust30dayNorthData")
        self.actionnorthdataWriteToTDX = QtWidgets.QAction(MainWindow)
        self.actionnorthdataWriteToTDX.setObjectName("actionnorthdataWriteToTDX")
        self.actionnorthThunderingSelect = QtWidgets.QAction(MainWindow)
        self.actionnorthThunderingSelect.setObjectName("actionnorthThunderingSelect")
        self.actionbankstartnmonitor = QtWidgets.QAction(MainWindow)
        self.actionbankstartnmonitor.setObjectName("actionbankstartnmonitor")
        self.actiondrogstartmonitor = QtWidgets.QAction(MainWindow)
        self.actiondrogstartmonitor.setObjectName("actiondrogstartmonitor")
        self.actionvol2000 = QtWidgets.QAction(MainWindow)
        self.actionvol2000.setObjectName("actionvol2000")
        self.actionSuperstop = QtWidgets.QAction(MainWindow)
        self.actionSuperstop.setObjectName("actionSuperstop")
        self.actionbanknmonitorStop = QtWidgets.QAction(MainWindow)
        self.actionbanknmonitorStop.setObjectName("actionbanknmonitorStop")
        self.actiondrogmonitorstop = QtWidgets.QAction(MainWindow)
        self.actiondrogmonitorstop.setObjectName("actiondrogmonitorstop")
        self.actionToddayzhangting = QtWidgets.QAction(MainWindow)
        self.actionToddayzhangting.setObjectName("actionToddayzhangting")
        self.actionzhangtingdataoutput = QtWidgets.QAction(MainWindow)
        self.actionzhangtingdataoutput.setObjectName("actionzhangtingdataoutput")
        self.actionnews_leadernews = QtWidgets.QAction(MainWindow)
        self.actionnews_leadernews.setObjectName("actionnews_leadernews")
        self.actionstocknews_zhangche = QtWidgets.QAction(MainWindow)
        self.actionstocknews_zhangche.setObjectName("actionstocknews_zhangche")
        self.actionstocknews_hangyiezhisun = QtWidgets.QAction(MainWindow)
        self.actionstocknews_hangyiezhisun.setObjectName("actionstocknews_hangyiezhisun")
        self.actionperStockNews = QtWidgets.QAction(MainWindow)
        self.actionperStockNews.setObjectName("actionperStockNews")
        self.actionstocknews_tuozhirili = QtWidgets.QAction(MainWindow)
        self.actionstocknews_tuozhirili.setObjectName("actionstocknews_tuozhirili")
        self.actionstocknews_globalMainnews = QtWidgets.QAction(MainWindow)
        self.actionstocknews_globalMainnews.setObjectName("actionstocknews_globalMainnews")
        self.action_lhborder = QtWidgets.QAction(MainWindow)
        self.action_lhborder.setObjectName("action_lhborder")
        self.actiontdxSelectStock = QtWidgets.QAction(MainWindow)
        self.actiontdxSelectStock.setObjectName("actiontdxSelectStock")
        self.actionNorthfundview = QtWidgets.QAction(MainWindow)
        self.actionNorthfundview.setObjectName("actionNorthfundview")
        self.actionMarketCloseView = QtWidgets.QAction(MainWindow)
        self.actionMarketCloseView.setObjectName("actionMarketCloseView")
        self.actionopenstrategyManager = QtWidgets.QAction(MainWindow)
        self.actionopenstrategyManager.setObjectName("actionopenstrategyManager")
        self.actionfunddirector = QtWidgets.QAction(MainWindow)
        self.actionfunddirector.setObjectName("actionfunddirector")
        self.actiondatatonowdirector = QtWidgets.QAction(MainWindow)
        self.actiondatatonowdirector.setObjectName("actiondatatonowdirector")
        self.actionSmartselectstock = QtWidgets.QAction(MainWindow)
        self.actionSmartselectstock.setObjectName("actionSmartselectstock")
        self.actionthslhb = QtWidgets.QAction(MainWindow)
        self.actionthslhb.setObjectName("actionthslhb")
        self.actionkaipanlaFP = QtWidgets.QAction(MainWindow)
        self.actionkaipanlaFP.setObjectName("actionkaipanlaFP")
        self.actiondabankanban = QtWidgets.QAction(MainWindow)
        self.actiondabankanban.setObjectName("actiondabankanban")
        self.actionpertradeview = QtWidgets.QAction(MainWindow)
        self.actionpertradeview.setObjectName("actionpertradeview")
        self.actionaiwencai = QtWidgets.QAction(MainWindow)
        self.actionaiwencai.setObjectName("actionaiwencai")
        self.actionluobotuoyan = QtWidgets.QAction(MainWindow)
        self.actionluobotuoyan.setObjectName("actionluobotuoyan")
        self.actiontradeingcount = QtWidgets.QAction(MainWindow)
        self.actiontradeingcount.setObjectName("actiontradeingcount")
        self.actionhottopic = QtWidgets.QAction(MainWindow)
        self.actionhottopic.setObjectName("actionhottopic")
        self.actiontopichottop = QtWidgets.QAction(MainWindow)
        self.actiontopichottop.setObjectName("actiontopichottop")
        self.actionCompanies_PerformanceForecast = QtWidgets.QAction(MainWindow)
        self.actionCompanies_PerformanceForecast.setObjectName("actionCompanies_PerformanceForecast")
        self.actionfanxinxia = QtWidgets.QAction(MainWindow)
        self.actionfanxinxia.setObjectName("actionfanxinxia")
        self.actionsuperordersendmsg = QtWidgets.QAction(MainWindow)
        self.actionsuperordersendmsg.setObjectName("actionsuperordersendmsg")
        self.actioncloseSendmsg = QtWidgets.QAction(MainWindow)
        self.actioncloseSendmsg.setObjectName("actioncloseSendmsg")
        self.actionPERSTOCKANALYIES = QtWidgets.QAction(MainWindow)
        self.actionPERSTOCKANALYIES.setObjectName("actionPERSTOCKANALYIES")
        self.actionJUST5DAYANALYIES = QtWidgets.QAction(MainWindow)
        self.actionJUST5DAYANALYIES.setObjectName("actionJUST5DAYANALYIES")
        self.actionTODAYANAALYIES = QtWidgets.QAction(MainWindow)
        self.actionTODAYANAALYIES.setObjectName("actionTODAYANAALYIES")
        self.actionopenmarketdatatop20 = QtWidgets.QAction(MainWindow)
        self.actionopenmarketdatatop20.setObjectName("actionopenmarketdatatop20")
        self.actionopendataoutTotdx = QtWidgets.QAction(MainWindow)
        self.actionopendataoutTotdx.setObjectName("actionopendataoutTotdx")
        self.actiononedaydadananalyies = QtWidgets.QAction(MainWindow)
        self.actiononedaydadananalyies.setObjectName("actiononedaydadananalyies")
        self.actionperfectdirctor = QtWidgets.QAction(MainWindow)
        self.actionperfectdirctor.setObjectName("actionperfectdirctor")
        self.actionintimezhangtingstart = QtWidgets.QAction(MainWindow)
        self.actionintimezhangtingstart.setObjectName("actionintimezhangtingstart")
        self.actionintimezhangtingstop = QtWidgets.QAction(MainWindow)
        self.actionintimezhangtingstop.setObjectName("actionintimezhangtingstop")
        self.page_cjrlsy = QtWidgets.QAction(MainWindow)
        self.page_cjrlsy.setObjectName("page_cjrlsy")
        self.tdxsj_tzrl_tzrl = QtWidgets.QAction(MainWindow)
        self.tdxsj_tzrl_tzrl.setObjectName("tdxsj_tzrl_tzrl")
        self.tdxsj_xgzx_xgzx = QtWidgets.QAction(MainWindow)
        self.tdxsj_xgzx_xgzx.setObjectName("tdxsj_xgzx_xgzx")
        self.tdxsj_lhbd = QtWidgets.QAction(MainWindow)
        self.tdxsj_lhbd.setObjectName("tdxsj_lhbd")
        self.tdxsj_rzrq_rzrq = QtWidgets.QAction(MainWindow)
        self.tdxsj_rzrq_rzrq.setObjectName("tdxsj_rzrq_rzrq")
        self.tdxsj_cgbd_cgbd = QtWidgets.QAction(MainWindow)
        self.tdxsj_cgbd_cgbd.setObjectName("tdxsj_cgbd_cgbd")
        self.tdxsj_zfsp_zfsp = QtWidgets.QAction(MainWindow)
        self.tdxsj_zfsp_zfsp.setObjectName("tdxsj_zfsp_zfsp")
        self.tdxsj_dzjy_dzjy = QtWidgets.QAction(MainWindow)
        self.tdxsj_dzjy_dzjy.setObjectName("tdxsj_dzjy_dzjy")
        self.tdxsj_cbjd_cbjd = QtWidgets.QAction(MainWindow)
        self.tdxsj_cbjd_cbjd.setObjectName("tdxsj_cbjd_cbjd")
        self.tdxsj_jzfx_jzfx = QtWidgets.QAction(MainWindow)
        self.tdxsj_jzfx_jzfx.setObjectName("tdxsj_jzfx_jzfx")
        self.tdxsj_jgcg_jgcg = QtWidgets.QAction(MainWindow)
        self.tdxsj_jgcg_jgcg.setObjectName("tdxsj_jgcg_jgcg")
        self.tdxsj_hddy_hddy = QtWidgets.QAction(MainWindow)
        self.tdxsj_hddy_hddy.setObjectName("tdxsj_hddy_hddy")
        self.tdxsj_sctj_sctj = QtWidgets.QAction(MainWindow)
        self.tdxsj_sctj_sctj.setObjectName("tdxsj_sctj_sctj")
        self.tdxsj_gzqh_gzqh = QtWidgets.QAction(MainWindow)
        self.tdxsj_gzqh_gzqh.setObjectName("tdxsj_gzqh_gzqh")
        self.tdxsj_mgsj_mgsj = QtWidgets.QAction(MainWindow)
        self.tdxsj_mgsj_mgsj.setObjectName("tdxsj_mgsj_mgsj")
        self.tdxsj_jjsj_jjsj = QtWidgets.QAction(MainWindow)
        self.tdxsj_jjsj_jjsj.setObjectName("tdxsj_jjsj_jjsj")
        self.tdxsj_hghy_hghy = QtWidgets.QAction(MainWindow)
        self.tdxsj_hghy_hghy.setObjectName("tdxsj_hghy_hghy")
        self.actionasdfs = QtWidgets.QAction(MainWindow)
        self.actionasdfs.setObjectName("actionasdfs")
        self.actionsadfre = QtWidgets.QAction(MainWindow)
        self.actionsadfre.setObjectName("actionsadfre")
        self.actionsadfasdf = QtWidgets.QAction(MainWindow)
        self.actionsadfasdf.setObjectName("actionsadfasdf")
        self.actionweer = QtWidgets.QAction(MainWindow)
        self.actionweer.setObjectName("actionweer")
        self.actionsadfsaf = QtWidgets.QAction(MainWindow)
        self.actionsadfsaf.setObjectName("actionsadfsaf")
        self.actionsdfsaw = QtWidgets.QAction(MainWindow)
        self.actionsdfsaw.setObjectName("actionsdfsaw")
        self.actionsadfsaf_2 = QtWidgets.QAction(MainWindow)
        self.actionsadfsaf_2.setObjectName("actionsadfsaf_2")
        self.tdxsj_ggsj_ggsj = QtWidgets.QAction(MainWindow)
        self.tdxsj_ggsj_ggsj.setObjectName("tdxsj_ggsj_ggsj")
        self.pc_tcld_bkzqb = QtWidgets.QAction(MainWindow)
        self.pc_tcld_bkzqb.setObjectName("pc_tcld_bkzqb")
        self.tdxsj_hysj_hysj = QtWidgets.QAction(MainWindow)
        self.tdxsj_hysj_hysj.setObjectName("tdxsj_hysj_hysj")
        self.actionthszhangtingfenxiExtools = QtWidgets.QAction(MainWindow)
        self.actionthszhangtingfenxiExtools.setObjectName("actionthszhangtingfenxiExtools")
        self.actionEXgujiayuce = QtWidgets.QAction(MainWindow)
        self.actionEXgujiayuce.setObjectName("actionEXgujiayuce")
        self.actionkongjianmima = QtWidgets.QAction(MainWindow)
        self.actionkongjianmima.setObjectName("actionkongjianmima")
        self.actioncaopanshou = QtWidgets.QAction(MainWindow)
        self.actioncaopanshou.setObjectName("actioncaopanshou")
        self.actionpc_zjlx_xg = QtWidgets.QAction(MainWindow)
        self.actionpc_zjlx_xg.setObjectName("actionpc_zjlx_xg")
        self.actionjinqihiuyi = QtWidgets.QAction(MainWindow)
        self.actionjinqihiuyi.setObjectName("actionjinqihiuyi")
        self.actionmarketNews = QtWidgets.QAction(MainWindow)
        self.actionmarketNews.setObjectName("actionmarketNews")
        self.action_zsyj = QtWidgets.QAction(MainWindow)
        self.action_zsyj.setObjectName("action_zsyj")
        self.action_opennorthanalyiesForm = QtWidgets.QAction(MainWindow)
        self.action_opennorthanalyiesForm.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.action_opennorthanalyiesForm.setObjectName("action_opennorthanalyiesForm")
        self.actionjingjiawriteToTDX = QtWidgets.QAction(MainWindow)
        self.actionjingjiawriteToTDX.setObjectName("actionjingjiawriteToTDX")
        self.actionjingjiadataExport = QtWidgets.QAction(MainWindow)
        self.actionjingjiadataExport.setObjectName("actionjingjiadataExport")
        self.actionjingjiadataAnalyies = QtWidgets.QAction(MainWindow)
        self.actionjingjiadataAnalyies.setObjectName("actionjingjiadataAnalyies")
        self.actionnorthFindstockF10 = QtWidgets.QAction(MainWindow)
        self.actionnorthFindstockF10.setObjectName("actionnorthFindstockF10")
        self.actionAhistoryPEAndPB = QtWidgets.QAction(MainWindow)
        self.actionAhistoryPEAndPB.setObjectName("actionAhistoryPEAndPB")
        self.actionbankyidong = QtWidgets.QAction(MainWindow)
        self.actionbankyidong.setObjectName("actionbankyidong")
        self.actionpankouyidong = QtWidgets.QAction(MainWindow)
        self.actionpankouyidong.setObjectName("actionpankouyidong")
        self.actionjiguopankoudata = QtWidgets.QAction(MainWindow)
        self.actionjiguopankoudata.setObjectName("actionjiguopankoudata")
        self.actionxlwanshoudan = QtWidgets.QAction(MainWindow)
        self.actionxlwanshoudan.setObjectName("actionxlwanshoudan")
        self.actionzp1fzsjdownload = QtWidgets.QAction(MainWindow)
        self.actionzp1fzsjdownload.setObjectName("actionzp1fzsjdownload")
        self.actionzp1fzsjfx = QtWidgets.QAction(MainWindow)
        self.actionzp1fzsjfx.setObjectName("actionzp1fzsjfx")
        self.actionzhaopanfx = QtWidgets.QAction(MainWindow)
        self.actionzhaopanfx.setObjectName("actionzhaopanfx")
        self.actionltfpsq = QtWidgets.QAction(MainWindow)
        self.actionltfpsq.setObjectName("actionltfpsq")
        self.actiondfcfxg = QtWidgets.QAction(MainWindow)
        self.actiondfcfxg.setObjectName("actiondfcfxg")
        self.actionopentradeterminetor = QtWidgets.QAction(MainWindow)
        self.actionopentradeterminetor.setObjectName("actionopentradeterminetor")
        self.actioniwencaixg = QtWidgets.QAction(MainWindow)
        self.actioniwencaixg.setObjectName("actioniwencaixg")
        self.actionstockhistoryawardselect = QtWidgets.QAction(MainWindow)
        self.actionstockhistoryawardselect.setObjectName("actionstockhistoryawardselect")
        self.actionopenquotecenter = QtWidgets.QAction(MainWindow)
        self.actionopenquotecenter.setObjectName("actionopenquotecenter")
        self.actionactionrelationglgsld = QtWidgets.QAction(MainWindow)
        self.actionactionrelationglgsld.setObjectName("actionactionrelationglgsld")
        self.actionhgldx = QtWidgets.QAction(MainWindow)
        self.actionhgldx.setObjectName("actionhgldx")
        self.actiondfcfqsgc = QtWidgets.QAction(MainWindow)
        self.actiondfcfqsgc.setObjectName("actiondfcfqsgc")
        self.actionupdatesuperfunddata = QtWidgets.QAction(MainWindow)
        self.actionupdatesuperfunddata.setObjectName("actionupdatesuperfunddata")
        self.actionddcjcs = QtWidgets.QAction(MainWindow)
        self.actionddcjcs.setObjectName("actionddcjcs")
        self.actionxilimaofp = QtWidgets.QAction(MainWindow)
        self.actionxilimaofp.setObjectName("actionxilimaofp")
        self.actionopenrpsanaly = QtWidgets.QAction(MainWindow)
        self.actionopenrpsanaly.setObjectName("actionopenrpsanaly")
        self.actionsuperfundintoflow = QtWidgets.QAction(MainWindow)
        self.actionsuperfundintoflow.setObjectName("actionsuperfundintoflow")
        self.actionopen_Fundamentalanalysis = QtWidgets.QAction(MainWindow)
        self.actionopen_Fundamentalanalysis.setObjectName("actionopen_Fundamentalanalysis")
        self.actionsouthDatainserttoDB = QtWidgets.QAction(MainWindow)
        self.actionsouthDatainserttoDB.setObjectName("actionsouthDatainserttoDB")
        self.actionsouthTop20Select = QtWidgets.QAction(MainWindow)
        self.actionsouthTop20Select.setObjectName("actionsouthTop20Select")
        self.actionsouthbuy = QtWidgets.QAction(MainWindow)
        self.actionsouthbuy.setObjectName("actionsouthbuy")
        self.actionsouthDataforone = QtWidgets.QAction(MainWindow)
        self.actionsouthDataforone.setObjectName("actionsouthDataforone")
        self.actionsouthbusinessTop20 = QtWidgets.QAction(MainWindow)
        self.actionsouthbusinessTop20.setObjectName("actionsouthbusinessTop20")
        self.actionSouthmoreFunction = QtWidgets.QAction(MainWindow)
        self.actionSouthmoreFunction.setObjectName("actionSouthmoreFunction")
        self.actionzhangtinguplimit = QtWidgets.QAction(MainWindow)
        self.actionzhangtinguplimit.setObjectName("actionzhangtinguplimit")
        self.actionfincalhislowvalueZT = QtWidgets.QAction(MainWindow)
        self.actionfincalhislowvalueZT.setObjectName("actionfincalhislowvalueZT")
        self.actionzhaohonglicaodi = QtWidgets.QAction(MainWindow)
        self.actionzhaohonglicaodi.setStatusTip("")
        self.actionzhaohonglicaodi.setObjectName("actionzhaohonglicaodi")
        self.actionopen3mafterselectstock = QtWidgets.QAction(MainWindow)
        self.actionopen3mafterselectstock.setObjectName("actionopen3mafterselectstock")
        self.actionsmallsotcksuperfundmonitor = QtWidgets.QAction(MainWindow)
        self.actionsmallsotcksuperfundmonitor.setObjectName("actionsmallsotcksuperfundmonitor")
        self.action_stocks_judge_trend = QtWidgets.QAction(MainWindow)
        self.action_stocks_judge_trend.setObjectName("action_stocks_judge_trend")
        self.actionstockfundinflow_calc = QtWidgets.QAction(MainWindow)
        self.actionstockfundinflow_calc.setObjectName("actionstockfundinflow_calc")
        self.actionopenexdatauodata = QtWidgets.QAction(MainWindow)
        self.actionopenexdatauodata.setObjectName("actionopenexdatauodata")
        self.actionmainbussnesskeyselect = QtWidgets.QAction(MainWindow)
        self.actionmainbussnesskeyselect.setObjectName("actionmainbussnesskeyselect")
        self.actionupdate_tracert_longtime_stock = QtWidgets.QAction(MainWindow)
        self.actionupdate_tracert_longtime_stock.setObjectName("actionupdate_tracert_longtime_stock")
        self.actionupdate_Amarket_longprofitstock = QtWidgets.QAction(MainWindow)
        self.actionupdate_Amarket_longprofitstock.setObjectName("actionupdate_Amarket_longprofitstock")
        self.actionOpenBot = QtWidgets.QAction(MainWindow)
        self.actionOpenBot.setObjectName("actionOpenBot")
        self.actionaiwencaitools = QtWidgets.QAction(MainWindow)
        self.actionaiwencaitools.setObjectName("actionaiwencaitools")
        self.actiontodayklineToDB = QtWidgets.QAction(MainWindow)
        self.actiontodayklineToDB.setObjectName("actiontodayklineToDB")
        self.actionhistoryklinetoDB = QtWidgets.QAction(MainWindow)
        self.actionhistoryklinetoDB.setObjectName("actionhistoryklinetoDB")
        self.actioncross_pressurese = QtWidgets.QAction(MainWindow)
        self.actioncross_pressurese.setObjectName("actioncross_pressurese")
        self.actiondufault = QtWidgets.QAction(MainWindow)
        self.actiondufault.setObjectName("actiondufault")
        self.actiondark_amber = QtWidgets.QAction(MainWindow)
        self.actiondark_amber.setObjectName("actiondark_amber")
        self.actiondark_blue = QtWidgets.QAction(MainWindow)
        self.actiondark_blue.setObjectName("actiondark_blue")
        self.actiondark_cyan = QtWidgets.QAction(MainWindow)
        self.actiondark_cyan.setObjectName("actiondark_cyan")
        self.actiondark_lightgreen = QtWidgets.QAction(MainWindow)
        self.actiondark_lightgreen.setObjectName("actiondark_lightgreen")
        self.actiondark_pink = QtWidgets.QAction(MainWindow)
        self.actiondark_pink.setObjectName("actiondark_pink")
        self.actiondark_purple = QtWidgets.QAction(MainWindow)
        self.actiondark_purple.setObjectName("actiondark_purple")
        self.actiondark_red = QtWidgets.QAction(MainWindow)
        self.actiondark_red.setObjectName("actiondark_red")
        self.actiondark_teal = QtWidgets.QAction(MainWindow)
        self.actiondark_teal.setObjectName("actiondark_teal")
        self.actiondark_yellow = QtWidgets.QAction(MainWindow)
        self.actiondark_yellow.setObjectName("actiondark_yellow")
        self.actionlight_amber = QtWidgets.QAction(MainWindow)
        self.actionlight_amber.setObjectName("actionlight_amber")
        self.actionlight_blue = QtWidgets.QAction(MainWindow)
        self.actionlight_blue.setObjectName("actionlight_blue")
        self.actionlight_cyan = QtWidgets.QAction(MainWindow)
        self.actionlight_cyan.setObjectName("actionlight_cyan")
        self.actionlight_cyan_500 = QtWidgets.QAction(MainWindow)
        self.actionlight_cyan_500.setObjectName("actionlight_cyan_500")
        self.actionlight_lightgreen = QtWidgets.QAction(MainWindow)
        self.actionlight_lightgreen.setObjectName("actionlight_lightgreen")
        self.actionlight_pink = QtWidgets.QAction(MainWindow)
        self.actionlight_pink.setObjectName("actionlight_pink")
        self.actionlight_purple = QtWidgets.QAction(MainWindow)
        self.actionlight_purple.setObjectName("actionlight_purple")
        self.actionlight_red = QtWidgets.QAction(MainWindow)
        self.actionlight_red.setObjectName("actionlight_red")
        self.actionlight_teal = QtWidgets.QAction(MainWindow)
        self.actionlight_teal.setObjectName("actionlight_teal")
        self.actionlight_yellow = QtWidgets.QAction(MainWindow)
        self.actionlight_yellow.setObjectName("actionlight_yellow")
        self.NorthAmtmenu.addAction(self.action_opennorthanalyiesForm)
        self.NorthAmtmenu.addAction(self.actionsuportjust30dayNorthData)
        self.NorthAmtmenu.addAction(self.actionnorthTop20Select)
        self.NorthAmtmenu.addAction(self.actionnorthbuyup)
        self.NorthAmtmenu.addSeparator()
        self.NorthAmtmenu.addAction(self.actionnorthDataforone)
        self.NorthAmtmenu.addAction(self.actionnorthFindstockF10)
        self.NorthAmtmenu.addAction(self.actionnorthdataWriteToTDX)
        self.NorthAmtmenu.addAction(self.actionNorthfundview)
        self.NorthAmtmenu.addSeparator()
        self.levelset.addAction(self.actionvol10000)
        self.levelset.addAction(self.actionvol5000)
        self.levelset.addAction(self.actionvol2000)
        self.levelset.addAction(self.actionvol1000)
        self.menu_dadanDataOutput.addAction(self.actiondadanoutTotxt)
        self.menu_dadanDataOutput.addAction(self.actiondadanoutTocsv)
        self.menu_dadanDataOutput.addAction(self.actiondadanoutTohtml)
        self.menu_dadananaly.addAction(self.actionPERSTOCKANALYIES)
        self.menu_dadananaly.addAction(self.actionTODAYANAALYIES)
        self.menu_dadananaly.addAction(self.actiononedaydadananalyies)
        self.menu_dadananaly.addAction(self.actionJUST5DAYANALYIES)
        self.menu_dadananaly.addSeparator()
        self.menu_dadananaly.addAction(self.actionddcjcs)
        self.SupperAmtmenu.addAction(self.actionSuperRealQuote)
        self.SupperAmtmenu.addAction(self.actionSuperstop)
        self.SupperAmtmenu.addAction(self.actionsuperordersendmsg)
        self.SupperAmtmenu.addAction(self.actioncloseSendmsg)
        self.SupperAmtmenu.addSeparator()
        self.SupperAmtmenu.addAction(self.levelset.menuAction())
        self.SupperAmtmenu.addAction(self.actionMonitorlistAddstock)
        self.SupperAmtmenu.addAction(self.menu_dadanDataOutput.menuAction())
        self.SupperAmtmenu.addAction(self.actionxlwanshoudan)
        self.SupperAmtmenu.addSeparator()
        self.SupperAmtmenu.addAction(self.menu_dadananaly.menuAction())
        self.SupperAmtmenu.addAction(self.actionstockhistoryawardselect)
        self.menu_intervalset.addAction(self.actionflush10s)
        self.menu_intervalset.addAction(self.actionflush20s)
        self.menu_intervalset.addAction(self.actionflush30s)
        self.menu_intervalset.addSeparator()
        self.menu_intervalset.addAction(self.actionflush60s)
        self.menu_intervalset.addAction(self.actionflush5m)
        self.menu_intervalset.addAction(self.actionflush10m)
        self.bankmenu.addAction(self.menu_intervalset.menuAction())
        self.bankmenu.addSeparator()
        self.bankmenu.addAction(self.actionbankstartnmonitor)
        self.bankmenu.addAction(self.actionbanknmonitorStop)
        self.bankmenu.addAction(self.actionbankyidong)
        self.topStockgetmenu.addAction(self.actionAlist)
        self.topStockgetmenu.addAction(self.actionHKlist)
        self.topStockgetmenu.addAction(self.actionUSAlist)
        self.topStockgetmenu.addSeparator()
        self.topStockgetmenu.addAction(self.actionStocklistOutput)
        self.menu_stock_select.addAction(self.actioniwencaixg)
        self.menu_stock_select.addAction(self.actiondfcfxg)
        self.menu_stock_select.addAction(self.actiontdxSelectStock)
        self.menu_stock_select.addAction(self.actionSmartselectstock)
        self.menu_stock_select.addSeparator()
        self.menu_stock_select.addAction(self.actionactionrelationglgsld)
        self.menu_stock_select.addAction(self.actionmainbussnesskeyselect)
        self.menu_stock_select.addAction(self.actionSelectStockByPm)
        self.menu_stock_select.addAction(self.actionSelectStockByAm)
        self.menu_stock_select.addSeparator()
        self.menu_stock_select.addAction(self.actionSelectlowlinestock)
        self.menu_stock_select.addAction(self.actionpc_zjlx_xg)
        self.menu_stock_select.addAction(self.actionfincalhislowvalueZT)
        self.menu_stock_select.addSeparator()
        self.menu_stock_select.addAction(self.actionzhaohonglicaodi)
        self.menu_stock_select.addAction(self.actionopen3mafterselectstock)
        self.menu_stock_select.addAction(self.actionzhangtinguplimit)
        self.menu_stock_select.addAction(self.actioncross_pressurese)
        self.menu_stock_select.addSeparator()
        self.menu_stock_select.addAction(self.actionupdate_tracert_longtime_stock)
        self.menu_stock_select.addAction(self.actionupdate_Amarket_longprofitstock)
        self.menuMaxstockmonitor.addAction(self.actiondrogstartmonitor)
        self.menuMaxstockmonitor.addAction(self.actiondrogmonitorstop)
        self.menuMaxstockmonitor.addSeparator()
        self.menuMaxstockmonitor.addAction(self.actionpankouyidong)
        self.menuMaxstockmonitor.addSeparator()
        self.menuMaxstockmonitor.addAction(self.actionjiguopankoudata)
        self.menuMaxstockmonitor.addSeparator()
        self.menuzhangting.addAction(self.actionintimezhangtingstart)
        self.menuzhangting.addAction(self.actionintimezhangtingstop)
        self.menuzhangting.addSeparator()
        self.menuzhangting.addAction(self.actionToddayzhangting)
        self.menuzhangting.addAction(self.action_lhborder)
        self.menuzhangting.addAction(self.actionfanxinxia)
        self.menuzhangting.addAction(self.actionthslhb)
        self.menuzhangting.addSeparator()
        self.menuzhangting.addAction(self.actiondabankanban)
        self.menuzhangting.addAction(self.actionzhangtingdataoutput)
        self.menuzhangting.addSeparator()
        self.menuzhangting.addAction(self.actiondfcfqsgc)
        self.menu_MarketOoenAndclose.addAction(self.actionzhaopanfx)
        self.menu_MarketOoenAndclose.addAction(self.actionMarketCloseView)
        self.menu_MarketOoenAndclose.addAction(self.actionkaipanlaFP)
        self.menu_MarketOoenAndclose.addAction(self.actionxilimaofp)
        self.menu_MarketOoenAndclose.addSeparator()
        self.menu_MarketOoenAndclose.addAction(self.actionsuperfundintoflow)
        self.menu_MarketOoenAndclose.addAction(self.actiontodayklineToDB)
        self.menu_MarketOoenAndclose.addAction(self.actionhistoryklinetoDB)
        self.menu_myblank.addAction(self.actionhgldx)
        self.menu_myblank.addAction(self.actionfunddirector)
        self.menu_myblank.addAction(self.actionpertradeview)
        self.menu_myblank.addAction(self.actiontradeingcount)
        self.menu_myblank.addSeparator()
        self.menu_myblank.addAction(self.actionluobotuoyan)
        self.menu_myblank.addAction(self.actiontopichottop)
        self.menu_myblank.addAction(self.actionCompanies_PerformanceForecast)
        self.menu_myblank.addAction(self.actionaiwencai)
        self.menu_myblank.addSeparator()
        self.menu_myblank.addAction(self.pc_tcld_bkzqb)
        self.menu_myblank.addAction(self.actionjinqihiuyi)
        self.menu_myblank.addAction(self.actionAhistoryPEAndPB)
        self.menu_myblank.addAction(self.actionupdatesuperfunddata)
        self.menu_myblank.addSeparator()
        self.menu_myblank.addAction(self.actionopen_Fundamentalanalysis)
        self.menu_myblank.addAction(self.actionopenrpsanaly)
        self.menu_myblank.addAction(self.actionopenquotecenter)
        self.menu_myblank.addAction(self.actionopenstrategyManager)
        self.menu_myblank.addAction(self.actionopentradeterminetor)
        self.menu_myblank.addSeparator()
        self.menu_myblank.addAction(self.actionsmallsotcksuperfundmonitor)
        self.menu_myblank.addAction(self.action_stocks_judge_trend)
        self.menu_myblank.addAction(self.actionstockfundinflow_calc)
        self.menu_TDXdatascenter.addAction(self.tdxsj_tzrl_tzrl)
        self.menu_TDXdatascenter.addAction(self.tdxsj_xgzx_xgzx)
        self.menu_TDXdatascenter.addAction(self.page_cjrlsy)
        self.menu_TDXdatascenter.addAction(self.tdxsj_lhbd)
        self.menu_TDXdatascenter.addSeparator()
        self.menu_TDXdatascenter.addAction(self.tdxsj_sctj_sctj)
        self.menu_TDXdatascenter.addAction(self.tdxsj_rzrq_rzrq)
        self.menu_TDXdatascenter.addAction(self.tdxsj_cgbd_cgbd)
        self.menu_TDXdatascenter.addAction(self.tdxsj_dzjy_dzjy)
        self.menu_TDXdatascenter.addAction(self.tdxsj_zfsp_zfsp)
        self.menu_TDXdatascenter.addSeparator()
        self.menu_TDXdatascenter.addAction(self.tdxsj_jzfx_jzfx)
        self.menu_TDXdatascenter.addAction(self.tdxsj_jgcg_jgcg)
        self.menu_TDXdatascenter.addAction(self.tdxsj_gzqh_gzqh)
        self.menu_TDXdatascenter.addAction(self.tdxsj_hddy_hddy)
        self.menu_TDXdatascenter.addSeparator()
        self.menu_TDXdatascenter.addAction(self.tdxsj_cbjd_cbjd)
        self.menu_TDXdatascenter.addAction(self.tdxsj_ggsj_ggsj)
        self.menu_TDXdatascenter.addAction(self.tdxsj_mgsj_mgsj)
        self.menu_TDXdatascenter.addAction(self.tdxsj_jjsj_jjsj)
        self.menu_TDXdatascenter.addAction(self.tdxsj_hghy_hghy)
        self.menu_TDXdatascenter.addSeparator()
        self.menu_TDXdatascenter.addAction(self.tdxsj_hysj_hysj)
        self.menu_2.addAction(self.actioncaopanshou)
        self.menu_2.addAction(self.actionthszhangtingfenxiExtools)
        self.menu_2.addAction(self.actionEXgujiayuce)
        self.menu_2.addAction(self.actionkongjianmima)
        self.menu_2.addSeparator()
        self.menu_2.addAction(self.actionltfpsq)
        self.menu_2.addAction(self.actionopenexdatauodata)
        self.menu_zixun.addAction(self.actionmarketNews)
        self.menu_zixun.addAction(self.action_zsyj)
        self.menu_jingjia.addAction(self.actionjingjiadataAnalyies)
        self.menu_jingjia.addSeparator()
        self.southAmtmenu.addAction(self.actionsouthDatainserttoDB)
        self.southAmtmenu.addAction(self.actionsouthTop20Select)
        self.southAmtmenu.addSeparator()
        self.southAmtmenu.addAction(self.actionsouthbuy)
        self.southAmtmenu.addAction(self.actionsouthDataforone)
        self.southAmtmenu.addAction(self.actionsouthbusinessTop20)
        self.southAmtmenu.addSeparator()
        self.southAmtmenu.addAction(self.actionSouthmoreFunction)
        self.menuAI.addAction(self.actionOpenBot)
        self.menuAI.addAction(self.actionaiwencaitools)
        self.menu.addAction(self.actiondufault)
        self.menu.addAction(self.actiondark_amber)
        self.menu.addAction(self.actiondark_blue)
        self.menu.addAction(self.actiondark_cyan)
        self.menu.addAction(self.actiondark_lightgreen)
        self.menu.addAction(self.actiondark_pink)
        self.menu.addAction(self.actiondark_purple)
        self.menu.addAction(self.actiondark_red)
        self.menu.addAction(self.actiondark_teal)
        self.menu.addAction(self.actiondark_yellow)
        self.menu.addAction(self.actionlight_amber)
        self.menu.addAction(self.actionlight_blue)
        self.menu.addAction(self.actionlight_cyan)
        self.menu.addAction(self.actionlight_cyan_500)
        self.menu.addAction(self.actionlight_lightgreen)
        self.menu.addAction(self.actionlight_pink)
        self.menu.addAction(self.actionlight_purple)
        self.menu.addAction(self.actionlight_red)
        self.menu.addAction(self.actionlight_teal)
        self.menu.addAction(self.actionlight_yellow)
        self.menubar.addAction(self.SupperAmtmenu.menuAction())
        self.menubar.addAction(self.bankmenu.menuAction())
        self.menubar.addAction(self.menuMaxstockmonitor.menuAction())
        self.menubar.addAction(self.menuzhangting.menuAction())
        self.menubar.addAction(self.menu_jingjia.menuAction())
        self.menubar.addAction(self.southAmtmenu.menuAction())
        self.menubar.addAction(self.NorthAmtmenu.menuAction())
        self.menubar.addAction(self.topStockgetmenu.menuAction())
        self.menubar.addAction(self.menu_MarketOoenAndclose.menuAction())
        self.menubar.addAction(self.menu_stock_select.menuAction())
        self.menubar.addAction(self.menu_myblank.menuAction())
        self.menubar.addAction(self.menu_TDXdatascenter.menuAction())
        self.menubar.addAction(self.menuAI.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_zixun.menuAction())
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget_left.setCurrentIndex(0)
        self.tabWidget_rightcontent.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "操盘神器      By:newhackerman@163.com"))
        self.label_drogstock.setText(_translate("MainWindow", "龙头"))
        self.textEdit_drogMoniter.setDocumentTitle(_translate("MainWindow", "龙头"))
        self.label_superAmount.setText(_translate("MainWindow", "大单"))
        self.label_zhangting.setText(_translate("MainWindow", "实时涨停"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_monitorcenter), _translate("MainWindow", "监控中心"))
        self.comboBox_bankgainianflash.setItemText(0, _translate("MainWindow", "3"))
        self.comboBox_bankgainianflash.setItemText(1, _translate("MainWindow", "5"))
        self.comboBox_bankgainianflash.setItemText(2, _translate("MainWindow", "8"))
        self.comboBox_bankgainianflash.setItemText(3, _translate("MainWindow", "10"))
        self.comboBox_bankgainianflash.setItemText(4, _translate("MainWindow", "15"))
        self.comboBox_bankgainianflash.setItemText(5, _translate("MainWindow", "20"))
        self.comboBox_bankgainianflash.setItemText(6, _translate("MainWindow", "30"))
        self.comboBox_bankgainianflash.setItemText(7, _translate("MainWindow", "45"))
        self.comboBox_bankgainianflash.setItemText(8, _translate("MainWindow", "60"))
        self.comboBox_bankgainianflash.setItemText(9, _translate("MainWindow", "300"))
        self.comboBox_bankgainianflash.setItemText(10, _translate("MainWindow", "600"))
        self.comboBox_bankgainianflash.setItemText(11, _translate("MainWindow", "1800"))
        self.comboBox_bankgainianflash.setItemText(12, _translate("MainWindow", "3600"))
        self.label_flashtimesset.setText(_translate("MainWindow", "刷新间隔设置（s）"))
        self.label_ganianbank.setText(_translate("MainWindow", "概念板块"))
        self.label_stockamound.setText(_translate("MainWindow", "个股资金"))
        self.label_hybank.setText(_translate("MainWindow", "行业板块"))
        self.label_stockquotes.setText(_translate("MainWindow", "个股行情"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_bankcenter), _translate("MainWindow", "行业与概念"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_point), _translate("MainWindow", "指数"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_2), _translate("MainWindow", "全球指数"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_3), _translate("MainWindow", "ETF行情"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab), _translate("MainWindow", "可转债"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_5), _translate("MainWindow", "美股"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_4), _translate("MainWindow", "A  股"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_6), _translate("MainWindow", "自选股"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_7), _translate("MainWindow", "创业板"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_8), _translate("MainWindow", "中小板"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_9), _translate("MainWindow", "科创板"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_10), _translate("MainWindow", "京交所"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_11), _translate("MainWindow", "中概股"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_12), _translate("MainWindow", "港股"))
        self.tabWidget_left.setTabText(self.tabWidget_left.indexOf(self.tab_13), _translate("MainWindow", "全球债券"))
        self.pushButtonaddmysocks.setText(_translate("MainWindow", "添加"))
        self.pushButtondelmystocks.setText(_translate("MainWindow", "删除"))
        self.pushButtonflushquotestart.setText(_translate("MainWindow", "刷新已开"))
        self.pushButtonvoiceremainder.setText(_translate("MainWindow", "语音已开"))
        self.tabWidget_rightcontent.setTabText(self.tabWidget_rightcontent.indexOf(self.MYSTOCK), _translate("MainWindow", "自选股"))
        self.tabWidget_rightcontent.setTabText(self.tabWidget_rightcontent.indexOf(self.clsnews), _translate("MainWindow", "财联社新闻"))
        self.tabWidget_rightcontent.setTabText(self.tabWidget_rightcontent.indexOf(self.tab_14), _translate("MainWindow", "新入围"))
        self.pushButton_flushfundsort.setText(_translate("MainWindow", "刷新已开"))
        self.lineEdit_realfundtime.setText(_translate("MainWindow", "20"))
        self.label_realfundflushtime.setText(_translate("MainWindow", "刷新间隔（秒）："))
        self.tabWidget_rightcontent.setTabText(self.tabWidget_rightcontent.indexOf(self.realfund), _translate("MainWindow", "实时资金"))
        self.tabWidget_rightcontent.setTabText(self.tabWidget_rightcontent.indexOf(self.tdxdd), _translate("MainWindow", "通达信大单"))
        self.pushButton_checkhealth.setText(_translate("MainWindow", "检   查"))
        self.tabWidget_rightcontent.setTabText(self.tabWidget_rightcontent.indexOf(self.stockcheckhealth), _translate("MainWindow", "扫雷"))
        self.NorthAmtmenu.setTitle(_translate("MainWindow", " 北资分析 "))
        self.SupperAmtmenu.setTitle(_translate("MainWindow", "超级资金监控"))
        self.levelset.setTitle(_translate("MainWindow", "监控档位设置"))
        self.menu_dadanDataOutput.setTitle(_translate("MainWindow", "数据导出"))
        self.menu_dadananaly.setTitle(_translate("MainWindow", "大单统计分析"))
        self.bankmenu.setTitle(_translate("MainWindow", "板块资金监控"))
        self.menu_intervalset.setTitle(_translate("MainWindow", "监控间隔设置"))
        self.topStockgetmenu.setTitle(_translate("MainWindow", "领先企业获取"))
        self.menu_stock_select.setTitle(_translate("MainWindow", "     选    股   "))
        self.menuMaxstockmonitor.setTitle(_translate("MainWindow", "  龙头盯盘  "))
        self.menuzhangting.setTitle(_translate("MainWindow", "  涨   停  "))
        self.menu_MarketOoenAndclose.setTitle(_translate("MainWindow", "开/复盘"))
        self.menu_myblank.setTitle(_translate("MainWindow", " 我的面板 "))
        self.menu_TDXdatascenter.setTitle(_translate("MainWindow", " 数据中心 "))
        self.menu_2.setTitle(_translate("MainWindow", " 外挂工具 "))
        self.menu_zixun.setTitle(_translate("MainWindow", "  资   讯  "))
        self.menu_jingjia.setTitle(_translate("MainWindow", "  竞   价  "))
        self.southAmtmenu.setTitle(_translate("MainWindow", "南向资金"))
        self.menuAI.setTitle(_translate("MainWindow", "AI助手"))
        self.menu.setTitle(_translate("MainWindow", "样式"))
        self.actionSuperRealQuote.setText(_translate("MainWindow", "开启实时监控"))
        self.actionvol10000.setText(_translate("MainWindow", ">10000手"))
        self.actionvol5000.setText(_translate("MainWindow", ">5000手"))
        self.actionvol1000.setText(_translate("MainWindow", ">1000手 "))
        self.actionMonitorlistAddstock.setText(_translate("MainWindow", "监控列表添加"))
        self.actionMonitorlistAddstock.setIconText(_translate("MainWindow", "监控列表添加"))
        self.actiondadanoutTotxt.setText(_translate("MainWindow", "导出为(.TXT)"))
        self.actiondadanoutTocsv.setText(_translate("MainWindow", "导出为(.CSV)"))
        self.actiondadanoutTohtml.setText(_translate("MainWindow", "导出为(.html)"))
        self.actionclear.setText(_translate("MainWindow", "清空"))
        self.actionflush.setText(_translate("MainWindow", "刷新"))
        self.actionflush10s.setText(_translate("MainWindow", "10秒"))
        self.actionflush20s.setText(_translate("MainWindow", "20秒"))
        self.actionflush30s.setText(_translate("MainWindow", "30秒"))
        self.actionflush60s.setText(_translate("MainWindow", "60秒"))
        self.actionflush5m.setText(_translate("MainWindow", "5分钟"))
        self.actionflush10m.setText(_translate("MainWindow", "10分钟"))
        self.actionAlist.setText(_translate("MainWindow", "A股市场领先企业"))
        self.actionHKlist.setText(_translate("MainWindow", "港股市场领先企业"))
        self.actionUSAlist.setText(_translate("MainWindow", "美股市场领先企业"))
        self.actionStocklistOutput.setText(_translate("MainWindow", "数据导出"))
        self.actionSelectStockByAm.setText(_translate("MainWindow", "早盘策略选股"))
        self.actionSelectStockByPm.setText(_translate("MainWindow", "尾盘策略选股"))
        self.actionSelectlowlinestock.setText(_translate("MainWindow", "再上450"))
        self.actionsouthstockF10.setText(_translate("MainWindow", "个股F10"))
        self.actionnorthDatainserttoDB.setText(_translate("MainWindow", "数据更新入库"))
        self.actionnorthTop20Select.setText(_translate("MainWindow", "净买入前20查询"))
        self.actionnorthbuyup.setText(_translate("MainWindow", "今日开始净买查询"))
        self.actionnorthDataforone.setText(_translate("MainWindow", "个股北资查询"))
        self.actionnorthDataforone.setToolTip(_translate("MainWindow", "个股北资历史走势"))
        self.actionnorthDataforone.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionnorthstockF10.setText(_translate("MainWindow", "个股F10"))
        self.actionsuportjust30dayNorthData.setText(_translate("MainWindow", "补齐近30日数据"))
        self.actionnorthdataWriteToTDX.setText(_translate("MainWindow", "北资写入通达信"))
        self.actionnorthThunderingSelect.setText(_translate("MainWindow", "个股是否暴雷"))
        self.actionbankstartnmonitor.setText(_translate("MainWindow", "开启板块监控"))
        self.actiondrogstartmonitor.setText(_translate("MainWindow", "开启龙头盯盘"))
        self.actionvol2000.setText(_translate("MainWindow", ">2000手"))
        self.actionSuperstop.setText(_translate("MainWindow", "停止实时监控"))
        self.actionbanknmonitorStop.setText(_translate("MainWindow", "停止监控"))
        self.actiondrogmonitorstop.setText(_translate("MainWindow", "停止盯盘"))
        self.actionToddayzhangting.setText(_translate("MainWindow", "选股宝涨停盯盘"))
        self.actionzhangtingdataoutput.setText(_translate("MainWindow", "涨停数据导出"))
        self.actionnews_leadernews.setText(_translate("MainWindow", "领导活动"))
        self.actionstocknews_zhangche.setText(_translate("MainWindow", "国家政策"))
        self.actionstocknews_hangyiezhisun.setText(_translate("MainWindow", "行业资讯"))
        self.actionperStockNews.setText(_translate("MainWindow", "个股资讯"))
        self.actionstocknews_tuozhirili.setText(_translate("MainWindow", "投资日历"))
        self.actionstocknews_globalMainnews.setText(_translate("MainWindow", "全球资讯"))
        self.action_lhborder.setText(_translate("MainWindow", "龙虎榜单"))
        self.actiontdxSelectStock.setText(_translate("MainWindow", "通达信策略选股"))
        self.actionNorthfundview.setText(_translate("MainWindow", "南北资概览"))
        self.actionMarketCloseView.setText(_translate("MainWindow", "每日盘面分析(TDX)"))
        self.actionopenstrategyManager.setText(_translate("MainWindow", "打开策略管理"))
        self.actionfunddirector.setText(_translate("MainWindow", "资金动向"))
        self.actiondatatonowdirector.setText(_translate("MainWindow", "数据看盘选股"))
        self.actionSmartselectstock.setText(_translate("MainWindow", "智能条件选股"))
        self.actionthslhb.setText(_translate("MainWindow", "同花顺龙虎榜"))
        self.actionkaipanlaFP.setText(_translate("MainWindow", "开盘啦复盘"))
        self.actiondabankanban.setText(_translate("MainWindow", "打板看盘"))
        self.actionpertradeview.setText(_translate("MainWindow", "逐笔追踪"))
        self.actionaiwencai.setText(_translate("MainWindow", "爱问财"))
        self.actionluobotuoyan.setText(_translate("MainWindow", "萝卜投研"))
        self.actiontradeingcount.setText(_translate("MainWindow", "盘中统计"))
        self.actionhottopic.setText(_translate("MainWindow", "热点主题"))
        self.actiontopichottop.setText(_translate("MainWindow", "题材龙头"))
        self.actionCompanies_PerformanceForecast.setText(_translate("MainWindow", "业绩预告"))
        self.actionfanxinxia.setText(_translate("MainWindow", "方新侠"))
        self.actionsuperordersendmsg.setText(_translate("MainWindow", "开启微信通知"))
        self.actioncloseSendmsg.setText(_translate("MainWindow", "关闭微信通知"))
        self.actionPERSTOCKANALYIES.setText(_translate("MainWindow", "个股大单分析"))
        self.actionJUST5DAYANALYIES.setText(_translate("MainWindow", "最近5天大单分析"))
        self.actionTODAYANAALYIES.setText(_translate("MainWindow", "当天大单分析"))
        self.actionopenmarketdatatop20.setText(_translate("MainWindow", "早盘竞价额top20"))
        self.actionopendataoutTotdx.setText(_translate("MainWindow", "早盘数据写通达信"))
        self.actiononedaydadananalyies.setText(_translate("MainWindow", "某天大单数据分析"))
        self.actionperfectdirctor.setText(_translate("MainWindow", "最强风口"))
        self.actionintimezhangtingstart.setText(_translate("MainWindow", "涨停监控开启"))
        self.actionintimezhangtingstop.setText(_translate("MainWindow", "涨停监控停止"))
        self.page_cjrlsy.setText(_translate("MainWindow", "港美股日历"))
        self.page_cjrlsy.setIconText(_translate("MainWindow", "港美股日历"))
        self.tdxsj_tzrl_tzrl.setText(_translate("MainWindow", "投资日历"))
        self.tdxsj_xgzx_xgzx.setText(_translate("MainWindow", "新股日历"))
        self.tdxsj_lhbd.setText(_translate("MainWindow", "龙虎榜单"))
        self.tdxsj_rzrq_rzrq.setText(_translate("MainWindow", "融资融券"))
        self.tdxsj_cgbd_cgbd.setText(_translate("MainWindow", "持股变动"))
        self.tdxsj_zfsp_zfsp.setText(_translate("MainWindow", "增发配送"))
        self.tdxsj_dzjy_dzjy.setText(_translate("MainWindow", "大宗交易"))
        self.tdxsj_cbjd_cbjd.setText(_translate("MainWindow", "财报数据"))
        self.tdxsj_jzfx_jzfx.setText(_translate("MainWindow", "价值分析"))
        self.tdxsj_jgcg_jgcg.setText(_translate("MainWindow", "机构持股"))
        self.tdxsj_hddy_hddy.setText(_translate("MainWindow", "调研互动"))
        self.tdxsj_sctj_sctj.setText(_translate("MainWindow", "市场统计"))
        self.tdxsj_gzqh_gzqh.setText(_translate("MainWindow", "股指期货"))
        self.tdxsj_mgsj_mgsj.setText(_translate("MainWindow", "美股数据"))
        self.tdxsj_jjsj_jjsj.setText(_translate("MainWindow", "基金数据"))
        self.tdxsj_hghy_hghy.setText(_translate("MainWindow", "宏观数据"))
        self.actionasdfs.setText(_translate("MainWindow", "asdfs"))
        self.actionsadfre.setText(_translate("MainWindow", "sadfre"))
        self.actionsadfasdf.setText(_translate("MainWindow", "sadfasdf"))
        self.actionweer.setText(_translate("MainWindow", "weer"))
        self.actionsadfsaf.setText(_translate("MainWindow", "sadfsaf"))
        self.actionsdfsaw.setText(_translate("MainWindow", "sdfsaw"))
        self.actionsadfsaf_2.setText(_translate("MainWindow", "sadfsaf"))
        self.tdxsj_ggsj_ggsj.setText(_translate("MainWindow", "港股数据"))
        self.pc_tcld_bkzqb.setText(_translate("MainWindow", "近期热点回顾"))
        self.tdxsj_hysj_hysj.setText(_translate("MainWindow", "行业数据"))
        self.actionthszhangtingfenxiExtools.setText(_translate("MainWindow", "同花顺涨停分析工具"))
        self.actionthszhangtingfenxiExtools.setToolTip(_translate("MainWindow", "同花顺涨停分析工具"))
        self.actionEXgujiayuce.setText(_translate("MainWindow", "股价预测"))
        self.actionkongjianmima.setText(_translate("MainWindow", "空间密码"))
        self.actioncaopanshou.setText(_translate("MainWindow", "操盘手学习"))
        self.actionpc_zjlx_xg.setText(_translate("MainWindow", "资金数据选股"))
        self.actionjinqihiuyi.setText(_translate("MainWindow", "近期会议"))
        self.actionmarketNews.setText(_translate("MainWindow", "沪深港美资讯"))
        self.action_zsyj.setText(_translate("MainWindow", "招商研究"))
        self.action_opennorthanalyiesForm.setText(_translate("MainWindow", "更多功能（打开）"))
        self.actionjingjiawriteToTDX.setText(_translate("MainWindow", "竞价数据写通达信"))
        self.actionjingjiadataExport.setText(_translate("MainWindow", "竞价数据导出"))
        self.actionjingjiadataAnalyies.setText(_translate("MainWindow", "打开分析工具"))
        self.actionnorthFindstockF10.setText(_translate("MainWindow", "F10查询"))
        self.actionAhistoryPEAndPB.setText(_translate("MainWindow", "A股历史PE与PB"))
        self.actionbankyidong.setText(_translate("MainWindow", "板块异动"))
        self.actionpankouyidong.setText(_translate("MainWindow", "盘口异动"))
        self.actionpankouyidong.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionjiguopankoudata.setText(_translate("MainWindow", "机构盘口**"))
        self.actionjiguopankoudata.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionxlwanshoudan.setText(_translate("MainWindow", "万手单(XL)"))
        self.actionxlwanshoudan.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionzp1fzsjdownload.setText(_translate("MainWindow", "早盘1分钟数据下载"))
        self.actionzp1fzsjfx.setText(_translate("MainWindow", "早盘1分钟数据分析"))
        self.actionzhaopanfx.setText(_translate("MainWindow", "打开早盘竞价分析"))
        self.actionltfpsq.setText(_translate("MainWindow", "龙头复盘"))
        self.actiondfcfxg.setText(_translate("MainWindow", "东财选股"))
        self.actionopentradeterminetor.setText(_translate("MainWindow", "打开交易终端"))
        self.actioniwencaixg.setText(_translate("MainWindow", "爱问财选股"))
        self.actionstockhistoryawardselect.setText(_translate("MainWindow", "个股历史资金查询"))
        self.actionstockhistoryawardselect.setShortcut(_translate("MainWindow", "Ctrl+Space"))
        self.actionopenquotecenter.setText(_translate("MainWindow", "行情中心"))
        self.actionactionrelationglgsld.setText(_translate("MainWindow", "概念公司亮点选股"))
        self.actionhgldx.setText(_translate("MainWindow", "宏观数据-流动性"))
        self.actiondfcfqsgc.setText(_translate("MainWindow", "东财强势股池"))
        self.actionupdatesuperfunddata.setText(_translate("MainWindow", "更新超级净流入数据"))
        self.actionddcjcs.setText(_translate("MainWindow", "大单成交趋势"))
        self.actionxilimaofp.setText(_translate("MainWindow", "犀利猫复盘"))
        self.actionopenrpsanaly.setText(_translate("MainWindow", "开打RPS分析"))
        self.actionsuperfundintoflow.setText(_translate("MainWindow", "超级资金流入流出情况"))
        self.actionopen_Fundamentalanalysis.setText(_translate("MainWindow", "打开基本面分析"))
        self.actionsouthDatainserttoDB.setText(_translate("MainWindow", "数据更新入库"))
        self.actionsouthTop20Select.setText(_translate("MainWindow", "净买入前20查询"))
        self.actionsouthbuy.setText(_translate("MainWindow", "今日开始净买查询"))
        self.actionsouthDataforone.setText(_translate("MainWindow", "个股南资数据查询"))
        self.actionsouthbusinessTop20.setText(_translate("MainWindow", "个股经纪商查询"))
        self.actionSouthmoreFunction.setText(_translate("MainWindow", "打开南向资金分析工具"))
        self.actionzhangtinguplimit.setText(_translate("MainWindow", "涨停不破"))
        self.actionfincalhislowvalueZT.setText(_translate("MainWindow", "历史低估区域近期涨停"))
        self.actionzhaohonglicaodi.setText(_translate("MainWindow", "赵红力抄底(市场全面大跌尾声)"))
        self.actionzhaohonglicaodi.setIconText(_translate("MainWindow", "赵红力抄底【大部分股灾式急跌】"))
        self.actionzhaohonglicaodi.setToolTip(_translate("MainWindow", "赵红力抄底【大部分股灾式急跌】"))
        self.actionzhaohonglicaodi.setWhatsThis(_translate("MainWindow", "用于市场全面大跌尾声【A字形的反弹更强】"))
        self.actionopen3mafterselectstock.setText(_translate("MainWindow", "开盘3分钟后选股"))
        self.actionsmallsotcksuperfundmonitor.setText(_translate("MainWindow", "个股分类资金监控"))
        self.action_stocks_judge_trend.setText(_translate("MainWindow", "金牛抄底判断大盘底"))
        self.actionstockfundinflow_calc.setText(_translate("MainWindow", "个股资金流入自定义计算"))
        self.actionopenexdatauodata.setText(_translate("MainWindow", "外部数据更新"))
        self.actionmainbussnesskeyselect.setText(_translate("MainWindow", "主营业务选股"))
        self.actionupdate_tracert_longtime_stock.setText(_translate("MainWindow", "长期跟踪股更新"))
        self.actionupdate_Amarket_longprofitstock.setText(_translate("MainWindow", "A股长期赢利风格股池更新"))
        self.actionOpenBot.setText(_translate("MainWindow", "打开机器人助手"))
        self.actionaiwencaitools.setText(_translate("MainWindow", "爱问财助手"))
        self.actiontodayklineToDB.setText(_translate("MainWindow", "更新当日kline"))
        self.actionhistoryklinetoDB.setText(_translate("MainWindow", "更新历史kline"))
        self.actioncross_pressurese.setText(_translate("MainWindow", "压力突破选股"))
        self.actiondufault.setText(_translate("MainWindow", "默认"))
        self.actiondark_amber.setText(_translate("MainWindow", "黑系琥珀"))
        self.actiondark_blue.setText(_translate("MainWindow", "黑系蓝"))
        self.actiondark_cyan.setText(_translate("MainWindow", "黑系青"))
        self.actiondark_lightgreen.setText(_translate("MainWindow", "黑系浅绿"))
        self.actiondark_pink.setText(_translate("MainWindow", "黑系粉"))
        self.actiondark_purple.setText(_translate("MainWindow", "黑系紫"))
        self.actiondark_red.setText(_translate("MainWindow", "黑系红"))
        self.actiondark_teal.setText(_translate("MainWindow", "黑系蓝绿"))
        self.actiondark_yellow.setText(_translate("MainWindow", "黑系黄"))
        self.actionlight_amber.setText(_translate("MainWindow", "亮系琥珀"))
        self.actionlight_blue.setText(_translate("MainWindow", "亮系蓝"))
        self.actionlight_cyan.setText(_translate("MainWindow", "亮系青"))
        self.actionlight_cyan_500.setText(_translate("MainWindow", "亮系青 500"))
        self.actionlight_lightgreen.setText(_translate("MainWindow", "亮系浅绿"))
        self.actionlight_pink.setText(_translate("MainWindow", "亮系粉"))
        self.actionlight_purple.setText(_translate("MainWindow", "亮系紫"))
        self.actionlight_red.setText(_translate("MainWindow", "亮系红"))
        self.actionlight_teal.setText(_translate("MainWindow", "亮系蓝绿"))
        self.actionlight_yellow.setText(_translate("MainWindow", "亮系黄"))
